{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# import the libraries we are going to use\n",
    "\n",
    "# libraries for Scraping and Cleaning the data\n",
    "import re\n",
    "import requests\n",
    "from bs4 import BeautifulSoup\n",
    "\n",
    "\n",
    "# libraries for Analyzing and Visualizing the data\n",
    "import pandas as pd\n",
    "from datetime import datetime"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Scraping out the raw html code of nairaland home page\n",
    "url = \"http://www.nairaland.com/home\"\n",
    "raw_html = requests.get(url) # returns the complete url html code\n",
    "\n",
    "# print (raw_html.text)\n",
    "\n",
    "raw_data = raw_html.text  # save the text in an object\n",
    "\n",
    "soup_data = BeautifulSoup(raw_data, \"lxml\") # use BeautifulSoup module read the html into xml to and save it in an object"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<td class=\"grad\"><h1><a class=\"g\" href=\"https://www.nairaland.com/?\" title=\"Nairaland Nigerian Forum\">₦airaland Forum</a></h1> Welcome, <b>Guest</b>: <a href=\"/register\">Join Nairaland</a> / <b><a href=\"/login\">LOGIN!</a></b> / <a href=\"/trending\">Trending</a> / <a href=\"/recent\">Recent</a> / <a href=\"/topics\">New</a><br/><b>Stats: </b>2,046,262 members, 4,393,228 topics. <b>Date</b>: Saturday, 04 August 2018 at 04:48 PM<p></p><form action=\"/search\"> <input name=\"q\" size=\"32\" type=\"text\"/>\n",
       " <input name=\"search\" type=\"submit\" value=\"Search\"/></form> </td>,\n",
       " <td class=\"l w\"><a href=\"/nairaland\" title=\" class=g\"><b>Nairaland / General</b></a>: <a href=\"/politics\" title=\"Our country Nigeria is the giant of Africa!\"><b>Politics</b></a>, <a href=\"/crime\" title=\"\"><b>Crime</b></a>, <a href=\"/romance\" title=\"Discuss dating, courtship, and romance in marriage.\"><b>Romance</b></a>, <a href=\"/jobs\" title=\"Job/Employment Opportunities; Vacancies In Nigeria!\"><b>Jobs/Vacancies</b></a>, <a href=\"/career\" title=\"Talk about workplace experiences and incidents, professional training and certification, career management, etc.  Employed, self-employed, job seekers.\"><b>Career</b></a>, <a href=\"/business\" title=\"Entrepreneurship, Startups, Economics, etc\"><b>Business</b></a>, <a href=\"/investment\" title=\"For Investors. Nigerian Stock Exchange (NSE) Stocks, Bonds, T-bills, Real-Estate, etc.\"><b>Investment</b></a>, <a href=\"/nysc\" title=\"National Youth Service Corps (NYSC) Discussions. Corpers, etc.\"><b>NYSC</b></a>, <a href=\"/education\" title=\"Nairaland Students Forum: Primary and secondary school, universities, polytechnics, et cetera.\"><b>Education</b></a>, <a href=\"/autos\" title=\"Cars, motorbikes, airplanes, et cetera.\"><b>Autos</b></a>, <a href=\"/cartalk\" title=\"Let's talk about cars here\"><b>Car Talk</b></a>, <a href=\"/properties\" title=\"Real Estate: Land, Houses, Flats, Etc.\"><b>Properties</b></a>, <a href=\"/health\" title=\"Health related topics.\"><b>Health</b></a>, <a href=\"/travel\" title=\"Tourism, travel.  Interesting destinations within Nigeria and abroad. And motoring!\"><b>Travel</b></a>, <a href=\"/family\" title=\"Marriage/Family issues including husband to wife, parent to child, sibling and extended family relationships\"><b>Family</b></a>, <a href=\"/culture\" title=\"Nigerian languages, traditions, practices, et cetera.\"><b>Culture</b></a>, <a href=\"/religion\" title=\"Share your faith and belief in God or higher powers here.\"><b>Religion</b></a>, <a href=\"/food\" title=\"Delicious foods and how to prepare them.  Anything about food or drink goes here.  This is the Nairaland kitchen!\"><b>Food</b></a>, <a href=\"/diaries\" title=\"Write about your life and let the whole world read you.  You won't even be interrupted by comments.   Nairaland members only!\"><b>Diaries</b></a>, <a href=\"/ads\" title=\"Nairaland Direct Adverts\"><b>Nairaland Ads</b></a>, <a href=\"/pets\" title=\"Discuss dogs/puppies, cats/kittens, and other pets. Buy and sell them\"><b>Pets</b></a>, <a href=\"/agriculture\" title=\"The business and science of crop and livestock production, Agric Science, Agric Economics, etc\"><b>Agriculture</b></a></td>,\n",
       " <td class=\"l \"><a href=\"/entertainment\" title=\"Entertainment threads that won't fit into any child board. class=g\"><b>Entertainment</b></a>: <a href=\"/jokes\" title=\"Riddles and jokes that fellow Nigerians can appreciate.\"><b>Jokes Etc</b></a>, <a href=\"/tv-movies\" title=\"Local television programmes, local and foreign movies available in Nigeria.\"><b>TV/Movies</b></a>, <a href=\"/music-radio\" title=\"Talk about your favorite songs, music albums, artists and bands.\"><b>Music/Radio</b></a>, <a href=\"/celebs\" title=\"Celebrity obsession, Nollywood gossip, etc.\"><b>Celebrities</b></a>, <a href=\"/fashion\" title=\"Clothes, dresses, make-up routines, and modeling.\"><b>Fashion</b></a>, <a href=\"/events\" title=\"Birthdays, Weddings, other Occasions. Planning, Announcement, Gifts.\"><b>Events</b></a>, <a href=\"/sports\" title=\"We are Nigerians; and we love soccer and many other sports!\"><b>Sports</b></a>, <a href=\"/gaming\" title=\"Welcome to the world of computer, Internet, video, and board games.  Xbox, PS2, Chess, whatever!\"><b>Gaming</b></a>, <a href=\"/forum-games\" title=\"Play various addictive forum games with fellow members of Nairaland.\"><b>Forum Games</b></a>, <a href=\"/literature\" title=\"For writers and lovers of books.\"><b>Literature</b></a></td>,\n",
       " <td class=\"l w\"><a href=\"/science\" title=\" class=g\"><b>Science/Technology</b></a>: <a href=\"/programming\" title=\"Software programming, development of applications..\"><b>Programming</b></a>, <a href=\"/webmasters\" title=\"Website design and development, management of forums, blogs, wikis, and all sorts of websites.\"><b>Webmasters</b></a>, <a href=\"/computers\" title=\"Personal Computing, etc.\"><b>Computers</b></a>, <a href=\"/phones\" title=\"Nigerian GSM networks, telephone companies, et cetera. ISPs, Modems, Websites, etc\"><b>Phones</b></a>, <a href=\"/graphics-video\" title=\"Digital Video and Film, Computer Graphics and Animation.  Tips, Tricks &amp; Tools.\"><b>Art, Graphics &amp; Video</b></a>, <a href=\"/techmarket\" title=\"Buy and sell Phones, Computers and PC accessories here.\"><b>Technology Market</b></a></td>,\n",
       " <td><img alt=\"\" src=\"/icons/smiley.gif\"/> <b><a href=\"/links\">Featured Links</a></b> / <b><a href=\"http://twitter.com/nairaland\">Twitter</a></b>  / <b><a href=\"http://facebook.com/nigerianforum\">Facebook</a></b>  / <b><a href=\"https://www.nairaland.com/1049481/how-place-targeted-ads-nairaland\">How To Advertise</a></b> <img src=\"/icons/smiley.gif\"/></td>,\n",
       " <td class=\"featured w\"> » <a href=\"https://www.nairaland.com/4656874/oyinbo-man-hiv-vows-spread\" style=\"font-size:11pt\"><b>Oyinbo Man With HIV Vows</b> To <b>Spread It</b> To <b>Ladies</b> In <b>Lagos - Twitter User</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656794/cameroon-street-foods-which-cameroonians\" style=\"font-size:11pt\"><b>See Cameroon Street Foods Which Cameroonians Love The Most</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656801/why-mass-defection-lawmakers-nass\" style=\"font-size:10.5pt\"><b>\"Why Mass Defection Of Lawmakers At NASS Is Illegal\" – Falana</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656724/certificate-forgery-conspiracy-silence-among\" style=\"font-size:10.5pt\"><b>Certificate Forgery: Conspiracy Of Silence Among Buhari’s Appointees Deepens</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656711/cristiano-ronaldo-unfollows-real-madrid\" style=\"font-size:10.5pt\"><b>Cristiano Ronaldo Unfollows Real Madrid On Social Media</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656223/apc-chieftain-sent-prison-rape\" style=\"font-size:10.5pt\"><b>APC Chieftain Sent To Prison For Rape Arrives Court On A Stretcher</b> (<b>Photos</b>)</a> «<br/>» <a href=\"https://www.nairaland.com/4656577/yorubas-cook-jollof-rice-better\" style=\"font-size:10.5pt\"><b>“Yorubas Cook Jollof Rice Better Than Igbos” - Nigerian Man Says</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656550/support-buhari-weed-out-thieves\" style=\"font-size:10.5pt\"><b>\"Support Buhari To Weed Out Thieves And Looters\" - Oshiomhole Tells Nigerians</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656530/adorable-photos-police-pro-opetola\"><b>Adorable Photos Of Police PRO, Dolapo Badmos, As She Celebrates Her Birthday Today</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656501/asisat-oshoala-becomes-new-real\"><b>'Small Girl, Big God': Asisat Oshoala Becomes New Real Estate Ambassador</b> (<b>Photos</b>)</a> «<br/>» <a href=\"https://www.nairaland.com/4656163/girls-marry-poor-man-youre\"><b>Girls, Can You Marry A Poor Man If You're Rich?</b></a> «<br/>» <a href=\"https://www.nairaland.com/4657176/icey-eleyi-come-up-official\"><b>Icey Eleyi - 'Come Up'</b> (<b>Official Video</b>)</a> «<br/>» <a href=\"https://www.nairaland.com/4657051/igbo-groups-oyingbo-market-mainland\"><b>Igbo Groups In Oyingbo Market In Mainland Local Government Lagos Join APC</b> (<b>Photos</b>)</a> «<br/>» <a href=\"https://www.nairaland.com/4657236/fg-perfects-plans-nail-saraki\"><b>FG Perfects Plans To Nail Saraki; See The 3-Prong Strategy</b></a> «<br/>» <a href=\"https://www.nairaland.com/4657325/sokoto-state-stand-still-sen\"><b>Senator Wamako's Fans Hold Reception For Him In Sokoto State (Photos</b>)</a> «<br/>» <a href=\"https://www.nairaland.com/4656428/me-collect-allawee-last-words\"><b>'Help Me Collect My Allawee' - Last Words Of Ogun Corper Who Died In Camp</b> (<b>Pics</b>)</a> «<br/>» <a href=\"https://www.nairaland.com/4656352/church-life-suppose-affect-family\"><b>\"My Wife's Church Life Is Affecting My Family. Help!\"</b></a> «<br/>» <a href=\"https://www.nairaland.com/4578660/watermelon-health-benefits\"><b>Watermelon</b> And <b>Its Health Benefits</b> To <b>The Body</b></a> «<br/>» <a href=\"https://www.nairaland.com/4655664/facebook-user-exposes-new-format\"><b>Facebook User Exposes New Format ATM Fraudsters Use To Scam People</b></a> «<br/>» <a href=\"https://www.nairaland.com/4657210/god-never-forgive-me-support\"><b>\"God Will Never Forgive Me If I Support Atiku For President\" — Obasanjo</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656697/ffk-slams-jerry-rawlings-over\"><b>\"No Wonder He Wets His Bed &amp; Dribbles When He Talks'' - FFK Slams Jerry Rawlings</b></a> «<br/>» <a href=\"https://www.nairaland.com/4657092/alleged-n8bn-fraud-efcc-closes\"><b>N8bn Fraud: EFCC Closes In On JAMB Directors, Employees</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656795/fulani-man-escapes-sharp-object\"><b>Fulani Man Escapes With Sharp Object In His Throat After Militia Attack</b> (<b>Graphic</b>)</a> «<br/>» <a href=\"https://www.nairaland.com/4657024/comedian-edo-charles-finds-daughter\"><b>Comedian Edo Charles Finds His Daughter After 18 Years</b> (<b>Photo</b>)</a> «<br/>» <a href=\"https://www.nairaland.com/4657058/inec-displays-certificates-osun-gov\"><b>INEC Displays Certificates Of Osun Gov Candidates</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656965/saraki-planning-impeach-buhari-mohammed\"><b>\"Saraki Planning To Impeach Buhari\" – Mohammed Lawal</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656846/pastor-beaten-mercilessly-benin-sleeping\"><b>Benin Pastor Beaten For Sleeping With Married Woman Who Died During Abortion</b> (<b>Pics</b>)</a> «<br/>» <a href=\"https://www.nairaland.com/4656887/apc-lawmakers-offered-n150m-each\"><b>'APC Lawmakers Offered N150m Each To Impeach Saraki, Dogara' – Timi Frank</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656689/dangote-truck-kills-10-after\"><b>Dangote Truck Kills 10 After Colliding With Bus On Abuja Road</b> (<b>Graphic Photos</b>)</a> «<br/>» <a href=\"https://www.nairaland.com/4655054/there-order-us-authorities-deny\"><b>'Is There An Order From US Authorities To Deny Nigerians Visas?'</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656221/women-dying-bigger-butts-33\"><b>Women Are Dying For Bigger Butts, 33 Have Died On Surgical Table In 5 Years</b> (<b>Pics</b>)</a> «<br/>» <a href=\"https://www.nairaland.com/4656032/saraki-stepped-banana-peel-senator\"><b>'Saraki Has Stepped On Banana Peel' - Senator Adamu</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656488/ahmed-makarfi-visits-femi-fani-kayode\"><b>Ahmed Makarfi Visits Femi Fani-Kayode And Wife, Precious</b> (<b>Photos</b>)</a> «<br/>» <a href=\"https://www.nairaland.com/4656561/linda-ikeji-pictured-davidos-daughter\"><b>Linda Ikeji Pictured With Davido's Daughter, Imade</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656341/photos-south-east-buhari-leadership-meeting\"><b>See Photos</b> From <b>South-East</b> For <b>Buhari Leadership Meeting</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656597/apc-adopt-labour-tactics-win\"><b>'Attack Dog': APC Will Adopt Labour Tactics</b> To <b>Win Kwara, Sokoto, Benue - Oshiomhole</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656542/apc-understand-strength-when-it\"><b>\"What Will Happen</b> If <b>APC Tries</b> To <b>Impeach Saraki\" – Tambuwal</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656315/making-love-found-primary-school\"><b>This Is Called 'Making Love': See What Was Found In Primary School Book!</b> (<b>Pictured</b>)</a> «<br/>» <a href=\"https://www.nairaland.com/4656207/let-wife-wear-out\"><b>Guys, Would You Allow Your Wife Wear This Out?</b> (<b>Photos</b>)</a> «<br/>» <a href=\"https://www.nairaland.com/4656570/how-kenneth-okonkwo-killed-political\"><b>Opinion: 'How Kenneth Okonkwo Killed His Political Ambition'</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656572/prostitutes-threaten-starve-policemen-sex\"><b>Sex Workers Threaten To Starve Policemen Of Sex Over Incessant Arrests</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656647/apc-insists-use-ebonyi-stadium\"><b>APC Insists On Using Ebonyi Stadium For Its Rally Despite Government’s Objection</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656752/dj-ecool-gifts-himself-diamond\"><b>DJ Ecool Gifts Himself Diamond Encrusted Rolex Watch (Pictures</b>)</a> «<br/>» <a href=\"https://www.nairaland.com/4656770/2019-senator-nyako-urges-adamawa\"><b>2019: Senator Nyako Urges Adamawa People Not To Waste Votes On APC</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656657/why-enrolled-son-mechanic-apprentice\"><b>Why I Enrolled My Son As A Mechanic Apprentice – Kunle Afolayan</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656702/kebbis-rice-pyramid-vs-oremekunu\"><b>\"Between Baguda's's Rice Pyramid And Fayose's Stomach Infrastructure\"</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656701/why-akpabio-threatening-leave-pdp\"><b>Why Akpabio Is Threatening To Leave PDP – Punch</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656558/presidential-candidate-nigeriansll-us-choose\"><b>2019: Nigerians’ll Help Us Choose Among Saraki, Tambuwal, Atiku - PDP</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656584/pdp-jittery-apc-akpabio-parley\"><b>PDP Jittery As APC, Akpabio Parley</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656164/okomu-oil-dangote-cement-shares\"><b>Okomu Oil, Dangote Cement Shares Depreciate At NSE</b></a> «<br/>» <a href=\"https://www.nairaland.com/4655048/dear-everyone-stop-clicking-links\"><b>\"Stop Clicking On Links Sent To You In The Name Of N-Power\"</b></a> «<br/>» <a href=\"https://www.nairaland.com/4655866/how-google-managed-maintain-dominance\"><b>How Google Has Managed To Maintain Its Dominance On The Internet Space</b></a> «<br/>» <a href=\"https://www.nairaland.com/4376894/official-jamb-malpractice-list-reasons\"><b>Official JAMB Malpractice List; Reasons Why JAMB Might Seize Your Result</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656500/popular-lagos-traffic-warden-jumps\"><b>Popular Lagos Traffic Warden Jumps On The Bonnet Of An Offender (Video) </b></a> «<br/>» <a href=\"https://www.nairaland.com/4656586/top-car-makers-country-origin\"><b>Top Car Makers And Their Country Of Origin (Photos</b>)</a> «<br/>» <a href=\"https://www.nairaland.com/4656539/new-photos-eko-atlantic-how\"><b>New Photos Of Eko Atlantic And How Much It Costs To Get A Land There</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656564/5-ways-automate-website\"><b>5 Ways To Automate Your Website</b></a> «<br/>» <a href=\"https://www.nairaland.com/3687646/united-betrayal\"><b>\"United In Betrayal\" A Story By PamelB</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656611/feel-bad-men-never-date\"><b>\"I Feel Bad For Men Who Have Never Dated Non-Nigerian Ladies\" - Man</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656494/buy-another-moto-jor-fans\"><b>\"Buy Another Moto Jor\" Fans Want Efe To Get Another Car (Pics</b>)</a> «<br/>» <a href=\"https://www.nairaland.com/4656556/5-qualities-should-consider-minor\"><b>\"5 Qualities You Should Consider Minor In Marriage\"</b></a> «<br/>» <a href=\"https://www.nairaland.com/4656482/never-wished-single-mother-uche\"><b>I Never Wished To Be A Single Mother – Uche Ogbodo</b></a> «<br/>» <a href=\"https://www.nairaland.com/4655418/fiancee-got-job-ex-without\"><b>\"My Fiancee Got</b> A <b>Job With The Help</b> Of <b>Her Ex Boyfriend Without</b> My <b>Consent\"</b></a> «<br/>» <a href=\"https://www.nairaland.com/4655436/poor-state-unn-boys-hostel\"><b>See The Poor State</b> Of <b>UNN Boys' Hostel</b> (<b>Disturbing Photos</b>)</a> «<br/>» <a href=\"https://www.nairaland.com/4656064/olusola-eleka-challenges-fayemis-victory\"><b>Ekiti Election: Olusola Eleka Formally Challenges Fayemi’s Victory At Tribunal</b> (<b>Pics</b>)</a> «</td>,\n",
       " <td>(<b>0</b>)  <a href=\"/links/1\">(<b>1</b>)</a> <a href=\"/links/2\">(<b>2</b>)</a> <a href=\"/links/3\">(<b>3</b>)</a> <a href=\"/links/4\">(<b>4</b>)</a> <a href=\"/links/5\">(<b>5</b>)</a> <a href=\"/links/6\">(<b>6</b>)</a> <a href=\"/links/7\">(<b>7</b>)</a> <a href=\"/links/8\">(<b>8</b>)</a> <a href=\"/links/9\">(<b>9</b>)</a> <a href=\"/links/10\">(<b>10</b>)</a> </td>,\n",
       " <td class=\"w\"><h3>Members Online:</h3> (<b>2992 Members</b> and <b>5879 Guests</b> online in <b>last 5 minutes</b>!)</td>,\n",
       " <td class=\"homeuser\"><h3>Birthdays:</h3>yinkacrown(<span class=\"m\">36</span>), Nosu, ekseel, tsmall(<span class=\"m\">34</span>), LanreDaMan, sparkle2k3, okeymadu(<span class=\"m\">37</span>), avelock, tollu, walace99(<span class=\"m\">21</span>), vivicintia(<span class=\"f\">29</span>), konkocious, tungstar, hens(<span class=\"m\">26</span>), ridlaw, datrailblazer(<span class=\"m\">29</span>), ratio4real, victorazy, sunnydel(<span class=\"m\">38</span>), LANRYUS(<span class=\"m\">40</span>), Trinity33, Tklassy, Senorprinz(<span class=\"m\">76</span>), AugustusA1(<span class=\"m\">29</span>), bigiyaro, itsik(<span class=\"m\">32</span>), trent9002, femyodsky, reel14(<span class=\"m\">34</span>), nkadoj, sambroose(<span class=\"m\">25</span>), jeyne(<span class=\"f\">29</span>), hardeihorlar, olabent85(<span class=\"m\">33</span>), ajosegabriel(<span class=\"m\">23</span>), bukkylink(<span class=\"f\">48</span>), peterDiamond, sunpet33(<span class=\"m\">27</span>), Stakekay1, Ngoziezel(<span class=\"f\">29</span>), bjhere2009(<span class=\"m\">46</span>), Alfred234(<span class=\"m\">23</span>), Senator202020(<span class=\"m\">31</span>), Reallymilky(<span class=\"f\">26</span>), Gliano(<span class=\"m\">30</span>), SEHHYTEX, princesscrown(<span class=\"f\">22</span>), MRUNN, Twinmama, jossy874(<span class=\"m\">31</span>), sirpedro(<span class=\"m\">26</span>), emmastuffs, panch001(<span class=\"m\">30</span>), Atb4life22(<span class=\"m\">33</span>), TheLegalEagle(<span class=\"f\">23</span>), Deefuray, CandidMee, endtime1(<span class=\"m\">35</span>), sageer1706(<span class=\"m\">29</span>), Limibanti, goldony(<span class=\"f\">58</span>), skylar2020, Damful, hawksford, WisdomCanada, OlalekanMultiD(<span class=\"m\">27</span>), Enigmaesq(<span class=\"m\">23</span>), Vicintonsh(<span class=\"m\">26</span>), dayoakinns(<span class=\"m\">30</span>), liilian(<span class=\"f\">26</span>), Eugenedimgba(<span class=\"m\">28</span>), sawsaw(<span class=\"m\">31</span>), whinnie, SetonDuring(<span class=\"m\">81</span>), harlaryoh(<span class=\"f\">22</span>), Ibbond, Parcel, Elduniya(<span class=\"m\">33</span>), SarcasticMe, Vivienne01, Foldvibes(<span class=\"m\">25</span>), Horlar995(<span class=\"m\">23</span>), Impecca(<span class=\"m\">27</span>), bcbones(<span class=\"-\">32</span>), Vokians, peta10(<span class=\"m\">29</span>), Alaminz(<span class=\"m\">26</span>), promo4(<span class=\"m\">29</span>), jnsoribe(<span class=\"m\">33</span>), Youngtrice(<span class=\"m\">20</span>), moses320(<span class=\"m\">24</span>), tycode(<span class=\"m\">25</span>), fagbemiakintayo, zykson(<span class=\"m\">22</span>), minasota(<span class=\"f\">23</span>), callmemikel(<span class=\"m\">29</span>), adebayobr(<span class=\"m\">22</span>), xperienced(<span class=\"m\">22</span>), batmath, RUGGEDWEAVER(<span class=\"m\">22</span>), Remion, Techgoon(<span class=\"m\">21</span>), masco131, Quanty(<span class=\"m\">23</span>), sitibemfen(<span class=\"m\">43</span>), GossipGirl1(<span class=\"f\">24</span>), abbeylah(<span class=\"m\">18</span>), Cashrex(<span class=\"m\">28</span>), unyted, Asap11(<span class=\"m\">29</span>), ikoroduvibes(<span class=\"m\">22</span>), Dizu, banqalee(<span class=\"m\">27</span>), smarttony(<span class=\"m\">29</span>), Modelqwen(<span class=\"f\">23</span>), NelsonObas(<span class=\"m\">18</span>), ugochukwufrenzy(<span class=\"m\">25</span>), Justus180(<span class=\"m\">25</span>), tollulope080, sizzlingcold(<span class=\"m\">28</span>), Augustchild004(<span class=\"m\">24</span>), Alfred4wealth(<span class=\"m\">29</span>), ChungLee, funfemitte(<span class=\"m\">26</span>), richyboi(<span class=\"m\">30</span>), DrSad(<span class=\"m\">29</span>), Samsofleo, tamsjay(<span class=\"m\">29</span>), Gabbykeys, Radical44(<span class=\"m\">26</span>), ysyowel(<span class=\"m\">29</span>), omonifamily, Ibrahim505(<span class=\"m\">33</span>), DOAI(<span class=\"f\">22</span>), Rjakleo(<span class=\"m\">20</span>), nobstel, Doyinwealth(<span class=\"f\">27</span>), acadadavido(<span class=\"m\">26</span>), ojeleyed(<span class=\"m\">37</span>), intjgirl(<span class=\"f\">18</span>), Joeblazers(<span class=\"m\">34</span>), correctBlogger(<span class=\"m\">20</span>), BoyLikeEze(<span class=\"m\">19</span>), Alexis04, Emjayofficial(<span class=\"m\">25</span>), abdulazeez19(<span class=\"m\">19</span>), wakmuna(<span class=\"m\">36</span>), Twix123(<span class=\"m\">19</span>), Kennyson201(<span class=\"-\">24</span>), SylB, staylon(<span class=\"m\">20</span>), trustshowodd(<span class=\"m\">27</span>), oke48, Solokad(<span class=\"m\">26</span>), Babayero212(<span class=\"m\">26</span>), BaloArchy(<span class=\"m\">33</span>), Chiefhaywhy(<span class=\"m\">30</span>), Samjeah01, ItzNafti(<span class=\"m\">24</span>), Onyemize4(<span class=\"m\">23</span>), Prowisest(<span class=\"m\">17</span>), Chinedub, Jessejayyyy(<span class=\"m\">59</span>)</td>,\n",
       " <td class=\"w\"><iframe allowtransparency=\"true\" frameborder=\"0\" scrolling=\"no\" src=\"//www.facebook.com/plugins/likebox.php?href=http%3A%2F%2Fwww.facebook.com%2Fnigerianforum&amp;width=960&amp;height=170&amp;colorscheme=light&amp;show_faces=true&amp;header=false&amp;stream=false&amp;show_border=false&amp;appId=214922901863083\" style=\"border:none; overflow:hidden; width:960px; height:170;\"></iframe></td>,\n",
       " <td class=\"small w grad\"><p></p><form action=\"/search\"> <input name=\"q\" size=\"32\" type=\"text\"/>\n",
       " <input name=\"search\" type=\"submit\" value=\"Search\"/></form>Sections:  <a href=\"/politics\">politics</a> <a href=\"/politics/1\">(1)</a> <a href=\"/business\">business</a> <a href=\"/autos\">autos</a> <a href=\"/autos/1\">(1)</a> <a href=\"/jobs\">jobs</a> <a href=\"/jobs/1\">(1)</a> <a href=\"/career\">career</a> <a href=\"/education\">education</a> <a href=\"/education/1\">(1)</a> <a href=\"/romance\">romance</a> <a href=\"/computers\">computers</a> <a href=\"/phones\">phones</a> <a href=\"/travel\">travel</a> <a href=\"/sports\">sports</a> <a href=\"/fashion\">fashion</a> <a href=\"/health\">health</a> <br/> <a href=\"/religion\">religion</a> <a href=\"/celebs\">celebs</a> <a href=\"/tv-movies\">tv-movies</a> <a href=\"/music-radio\">music-radio</a> <a href=\"/literature\">literature</a> <a href=\"/webmasters\">webmasters</a> <a href=\"/programming\">programming</a> <a href=\"/techmarket\">techmarket</a> <p>Links:  <a href=\"/links\">(0)</a> <a href=\"/links/1\">(1)</a> <a href=\"/links/2\">(2)</a> <a href=\"/links/3\">(3)</a> <a href=\"/links/4\">(4)</a> <a href=\"/links/5\">(5)</a> <a href=\"/links/6\">(6)</a> <a href=\"/links/7\">(7)</a> <a href=\"/links/8\">(8)</a> <a href=\"/links/9\">(9)</a> </p><p><b><a href=\"/\" title=\"Nigerian Forum\">Nairaland</a></b> - Copyright © 2005 - 2018 <a href=\"http://www.seunosewa.com\" title=\"Seun\">Oluwaseun Osewa</a>. All rights reserved. See <a href=\"https://www.nairaland.com/1049481/how-place-targeted-ads-nairaland\">How To Advertise</a>. 5<br/><b>Disclaimer</b>: Every Nairaland member is <b>solely responsible</b> for <b>anything</b> that he/she <b>posts</b> or <b>uploads</b> on Nairaland.</p></td>]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# lets display only the part of the data we need. It is contained in the cell of table tag (<td>)\n",
    "\n",
    "soup_data(\"td\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "₦airaland Forum Welcome, Guest: Join Nairaland / LOGIN! / Trending / Recent / NewStats: 2,045,834 members, 4,391,628 topics. Date: Friday, 03 August 2018 at 05:12 PM \n",
      " \n",
      "Nairaland / General: Politics, Crime, Romance, Jobs/Vacancies, Career, Business, Investment, NYSC, Education, Autos, Car Talk, Properties, Health, Travel, Family, Culture, Religion, Food, Diaries, Nairaland Ads, Pets, Agriculture\n",
      "Entertainment: Jokes Etc, TV/Movies, Music/Radio, Celebrities, Fashion, Events, Sports, Gaming, Forum Games, Literature\n",
      "Science/Technology: Programming, Webmasters, Computers, Phones, Art, Graphics & Video, Technology Market\n",
      " Featured Links / Twitter  / Facebook  / How To Advertise \n",
      " » 8 Rounds Of Sex With Goat - Zimbabwean Man Caught Pants Down With Goat (Photo) «» Erosion: Federal High Court, Awka Faces Imminent Collapse (Photo) «» Police Arrest Principal Of Ede Muslim High School Over Senator Adeleke’s Result «» Defectors Must Not Be Accorded Undue Advantage – Makarfi «» \"I Almost Lost My Life Working With You\" - Waje's Personal Assistant Calls Her Out «» Ras Kimono's Burial Arrangement Announced (Photo) «» Beautiful Slay Queens Celebrate As They Graduate From Imo State University (Photos) «» 'How I Mistakenly Romanced A Transgender In Canada' - YBNL Singer, Viktoh «» Popular Abuja Based Pastor Shot Dead By Gunmen In Port Harcourt (Photos) «» Ikeja Bus Terminal That Was Commissioned Has Not Been Completed. See Why (Photos) «» \"There Is No Legal Or Constitutional Basis For Saraki To Resign\" - Mike Ozekhome «» Man Reveals How He Fooled His Neigbors, Left His Properties & Left Nigeria «» Dating Yoruba Boys Vs Igbo Boys: The Difference - By Ex Beauty Queen, Ronke Tiamiyu «» Photos From The Meeting Of Tinubu & Oshiomhole With Wamakko «» See Marriage List Of A Community In Akwa Ibom State (Photos) «» ￼American Man Reveals How A Nigeria Man Sent Him A Nigerian Jersey «» Davido's Brother Blasts Student Asking For A New Hostel At Adeleke University «» 3 Homosexuals, Others Arrested In Sokoto (Photo) «» Fulani Herdsmen Abandon Their Cows After Sighting Vigilante In Anambra (Photos) «» 'Buhari, Most Famous Health Tourist' – Ben Murray-Bruce «» Stanbic IBTC Bank Fresh Massive Job Recruitment (60 Positions) «» A Reply To \"Where Are The Senators? Channels TV Infographic\" «» How 13-Year-Old Boy Was Sold And Re-Sold For N340,000 «» 2019: Tambuwal, Kwankwaso, Saraki Get Nod To Contest PDP Ticket «» Sarri And Hazard Prepare To See Each Other Physically For The First Time «» Man Dies After Finding Another Man In The Apartment He Rented For His Lover «» Vacancy For Graphic Artist At WHO Nigeria «» Nigerian Men Placed In Handcuffs As They Are Deported From China (Photos) «» Outrage As Headmaster Defiles 4 Female Pupils Inside Bush «» 10-Year-Old Kenyan Girl Rescued After Being Married Off To 3 Different Men «» Lagos-Ibadan Rail Ready December «» These Are Toyota Camry Facts You May Not Know – A Peek Into The Unknown «» Check Out Ini Edo's New Look (Photo) «» Where Are The Senators?: Check Out Channels TV Infographic (Photos) «» See How Adams Oshiomhole Was Received As He Arrives Benin Airport (Photos) «» The Spiritual Significance Of Hajj (Pilgrimage To Mecca) «» Hajj Patronage Drops Despite Lower Fare «» 'May Allah Grant Us Good Ends' «» Restaurant Owner In Singapore Takes His Employees For Umrah «» Etiquettes Of Hajj And Umrah «» What's Islamic Rule On 'Wealthy Home Plus' «» Hajj (Pilgrimage): See All What You Need To Know! «» See What The Surrounding Of National Mosque Abuja Looked Like In The Late 80s «» Ahmed Musa Leaves Leicester To Join Saudi Arabia's Al-Nassr On A Four-Year Deal «» 'Don’t Crucify Ortom For Leaving APC' - Wole Soyinka «» '10 Guy Code Rules Every Man Should Never Break' «» Beauty Tips: Benefits Of Tomatoes For Your Skin «» Mikel Obi’s Russian Wife Reacts To Allegation That He Does Not Help His Family «» 7 Secret Android Functions Most Users Don’t Know About (Photos) «» CeeC Slays In Recent Photos «» \"How Obasanjo Knelt Down For Atiku In 2003\" - Professor Soyinka Exposes Ex President «» How To Apply For Flour Mills Nigeria Latest Job Recruitment (2 Positions) «» Nigerian Prophet Blesses Two Retired Prostitutes With ₦7m To Start New Lives (Pics) «» 'Saraki, Tambuwal, Others Defection Unconstitutional' - Falana «» Pregnant Linda Ikeji, Her Mum & Dele Momodu Pictured Together In Atlanta «» See Fayose And Wife's Throwback Photos After 29 Years Of Marriage «» Performing With Lagbaja Was A Milestone – Simi «» More Photos Of Buhari At Campaign Rally For Bauchi South Senatorial Bye Election «» \"I Want To Continue Scoring Goals\" - Kelechi Iheanacho «» APC Blasts Gov. Umahi, Declares Him Enemy Of Democracy For Banning Its Rally «» 2019: Unseating Buhari Will Not Be Easy - R-APC Chairman Acknowledges «» Joining PDP Doesn't Affect Saraki's Position As Senate President - Prof. Sagay «» ICC Denies Rating Buhari On Integrity «» Dangote Oil Refinery Poses Threat To European Plants «» FG Moves To Extend Maternity Leave To Six Months «\n",
      "(0)  (1) (2) (3) (4) (5) (6) (7) (8) (9) (10) \n",
      "Members Online: (3121 Members and 6655 Guests online in last 5 minutes!)\n",
      "Birthdays:remedies4a, Emilo(37), dolphinx(33), ray4life(44), Femonjay, dozymars, lakesider(33), sulakishop(37), MANGAM(36), jboi08(31), moursawre, saintF, djsmart, slydog, horlajide, mostfavoured, osas03(26), Yeecar, charmosky(44), JaneOU(33), Alpha2k, jigabanty, emyibe(39), bishophenry, Nuezha, greyce(22), sKeetz(25), Fran6ixesq(31), iykomo0(24), Slimmama, Godson201333(30), oleary, sabrosa07(28), aimoghagbon(33), ayorwizz, Michael125(25), RotrEmmanuel(29), benjsniper33, besocial, Gregdcutie(23), Annybens1993, creepsyme, CodeineJunkiee(32), abdul7465(29), smoothrun(39), MISSCONGENIALITY(25), taiwokyle(28), wiringdpt(30), Zainal(22), gingger(27), busuyi44(39), mulablings007, nunamyeong, Emeritusseun, Hitunnu(31), advocatebaba(29), bodeoni(29), LordClem(29), muyicomms(36), dmkcah, HzRF(23), Sempumping, Staru1(28), ifewunmy(28), blackmarya(24), miltonchux(39), restore8(23), padrey(40), stagamagadasca(27), mediahubng(30), greymatter15(39), kajola1(27), Apoztl3(29), Iykekomo(29), Adanazzy1(25), ChidozieModest(29), Augustine2891(36), campbelljosh(26), Dmes(29), ElvisMcCoy(30), Sanni45, Calixwest, Cool23(19), edichriss(23), victorvezx(28), ABIMBOLAMARY, WaleOsu(25), abclassic15, Bolaji299, SEEDORF441(20), Pmane, ChuksManny(88), Coloradvantage(27), donproject(29), Malcolm101(30), Larrycool1234(31), Ebije1(28), Cattman(36), chigo5(25), RoyalUc, d1whizzy(36), thickminaj(21), joshnes, odubayor(19), hadebeeceAJ(30), dobujay(29), Iamnobody, Joegalvinsblog(21), Ochule1(30), hardeybawler(21), MaEssien, austyne22ex(29), Repro, DamilolaDaniel1(25), ULTISHIBOY(28), abelify1(41), Perfectnumber6(24), Kenxxy(29), Mhizdebs, Okoyedavid3(25), OfiaeliSomto(18), nkerealfred(26), chinavs9ja(25), Equilibrium959(26), Pauline23(20), minista94(31), ChuksManny82(26), WinnersFC1, Collinzbrown31(23), Scheun(34), Flixstar86, dariuspemba(21), brendinlogistic(29)\n",
      "\n",
      " \n",
      "Sections:  politics (1) business autos (1) jobs (1) career education (1) romance computers phones travel sports fashion health  religion celebs tv-movies music-radio literature webmasters programming techmarket Links:  (0) (1) (2) (3) (4) (5) (6) (7) (8) (9) Nairaland - Copyright © 2005 - 2018 Oluwaseun Osewa. All rights reserved. See How To Advertise. 9Disclaimer: Every Nairaland member is solely responsible for anything that he/she posts or uploads on Nairaland.\n"
     ]
    }
   ],
   "source": [
    "# lets read out the text only ignoring the tag cell in a table\n",
    "for data in soup_data(\"td\"):\n",
    "    print (data.text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['yinkacrown(36)', 'tsmall(34)', 'okeymadu(37)', 'walace99(21)', 'vivicintia(29)', 'hens(26)', 'datrailblazer(29)', 'sunnydel(38)', 'LANRYUS(40)', 'Senorprinz(76)', 'AugustusA1(29)', 'itsik(32)', 'reel14(34)', 'sambroose(25)', 'jeyne(29)', 'olabent85(33)', 'ajosegabriel(23)', 'bukkylink(48)', 'sunpet33(27)', 'Ngoziezel(29)', 'bjhere2009(46)', 'Alfred234(23)', 'Senator202020(31)', 'Reallymilky(26)', 'Gliano(30)', 'princesscrown(22)', 'jossy874(31)', 'sirpedro(26)', 'panch001(30)', 'Atb4life22(33)', 'TheLegalEagle(23)', 'endtime1(35)', 'sageer1706(29)', 'goldony(58)', 'OlalekanMultiD(27)', 'Enigmaesq(23)', 'Vicintonsh(26)', 'dayoakinns(30)', 'liilian(26)', 'Eugenedimgba(28)', 'sawsaw(31)', 'SetonDuring(81)', 'harlaryoh(22)', 'Elduniya(33)', 'Foldvibes(25)', 'Horlar995(23)', 'Impecca(27)', 'bcbones(32)', 'peta10(29)', 'Alaminz(26)', 'promo4(29)', 'jnsoribe(33)', 'Youngtrice(20)', 'moses320(24)', 'tycode(25)', 'zykson(22)', 'minasota(23)', 'callmemikel(29)', 'adebayobr(22)', 'xperienced(22)', 'RUGGEDWEAVER(22)', 'Techgoon(21)', 'Quanty(23)', 'sitibemfen(43)', 'GossipGirl1(24)', 'abbeylah(18)', 'Cashrex(28)', 'Asap11(29)', 'ikoroduvibes(22)', 'banqalee(27)', 'smarttony(29)', 'Modelqwen(23)', 'NelsonObas(18)', 'ugochukwufrenzy(25)', 'Justus180(25)', 'sizzlingcold(28)', 'Augustchild004(24)', 'Alfred4wealth(29)', 'funfemitte(26)', 'richyboi(30)', 'DrSad(29)', 'tamsjay(29)', 'Radical44(26)', 'ysyowel(29)', 'Ibrahim505(33)', 'DOAI(22)', 'Rjakleo(20)', 'Doyinwealth(27)', 'acadadavido(26)', 'ojeleyed(37)', 'intjgirl(18)', 'Joeblazers(34)', 'correctBlogger(20)', 'BoyLikeEze(19)', 'Emjayofficial(25)', 'abdulazeez19(19)', 'wakmuna(36)', 'Twix123(19)', 'Kennyson201(24)', 'staylon(20)', 'trustshowodd(27)', 'Solokad(26)', 'Babayero212(26)', 'BaloArchy(33)', 'Chiefhaywhy(30)', 'ItzNafti(24)', 'Onyemize4(23)', 'Prowisest(17)', 'Jessejayyyy(59)']\n"
     ]
    }
   ],
   "source": [
    "# Obviously, we don't need every text above. So use the 're' module, to extract only the relevant birthday list\n",
    "\n",
    "# Note: I will ignore those members whose ages are not displayed, so that we don't have to deal with NaN values in our data\n",
    "\n",
    "\n",
    "member_found = None\n",
    "\n",
    "re_match = \"[\\w]+\\([\\d]+\\)\" # any word count+1 followed-by '(' followed-by any number count+1 followed-by ')'\n",
    "\n",
    "for data in soup_data(\"td\"):\n",
    "    data_found = re.findall(re_match, data.text)\n",
    "    \n",
    "    if data_found:\n",
    "        member_found = data_found\n",
    "\n",
    "print (member_found)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['yinkacrown(36', 'tsmall(34', 'okeymadu(37', 'walace99(21', 'vivicintia(29', 'hens(26', 'datrailblazer(29', 'sunnydel(38', 'LANRYUS(40', 'Senorprinz(76', 'AugustusA1(29', 'itsik(32', 'reel14(34', 'sambroose(25', 'jeyne(29', 'olabent85(33', 'ajosegabriel(23', 'bukkylink(48', 'sunpet33(27', 'Ngoziezel(29', 'bjhere2009(46', 'Alfred234(23', 'Senator202020(31', 'Reallymilky(26', 'Gliano(30', 'princesscrown(22', 'jossy874(31', 'sirpedro(26', 'panch001(30', 'Atb4life22(33', 'TheLegalEagle(23', 'endtime1(35', 'sageer1706(29', 'goldony(58', 'OlalekanMultiD(27', 'Enigmaesq(23', 'Vicintonsh(26', 'dayoakinns(30', 'liilian(26', 'Eugenedimgba(28', 'sawsaw(31', 'SetonDuring(81', 'harlaryoh(22', 'Elduniya(33', 'Foldvibes(25', 'Horlar995(23', 'Impecca(27', 'bcbones(32', 'peta10(29', 'Alaminz(26', 'promo4(29', 'jnsoribe(33', 'Youngtrice(20', 'moses320(24', 'tycode(25', 'zykson(22', 'minasota(23', 'callmemikel(29', 'adebayobr(22', 'xperienced(22', 'RUGGEDWEAVER(22', 'Techgoon(21', 'Quanty(23', 'sitibemfen(43', 'GossipGirl1(24', 'abbeylah(18', 'Cashrex(28', 'Asap11(29', 'ikoroduvibes(22', 'banqalee(27', 'smarttony(29', 'Modelqwen(23', 'NelsonObas(18', 'ugochukwufrenzy(25', 'Justus180(25', 'sizzlingcold(28', 'Augustchild004(24', 'Alfred4wealth(29', 'funfemitte(26', 'richyboi(30', 'DrSad(29', 'tamsjay(29', 'Radical44(26', 'ysyowel(29', 'Ibrahim505(33', 'DOAI(22', 'Rjakleo(20', 'Doyinwealth(27', 'acadadavido(26', 'ojeleyed(37', 'intjgirl(18', 'Joeblazers(34', 'correctBlogger(20', 'BoyLikeEze(19', 'Emjayofficial(25', 'abdulazeez19(19', 'wakmuna(36', 'Twix123(19', 'Kennyson201(24', 'staylon(20', 'trustshowodd(27', 'Solokad(26', 'Babayero212(26', 'BaloArchy(33', 'Chiefhaywhy(30', 'ItzNafti(24', 'Onyemize4(23', 'Prowisest(17', 'Jessejayyyy(59']\n"
     ]
    }
   ],
   "source": [
    "# Lets further clean up the list to seperate Usernames from age\n",
    "\n",
    "# Use list comprehension to replace the last brace \")\" with empty \"\" in member_found above\n",
    "\n",
    "\n",
    "member_found_replaced = [x.replace(\")\", \"\") for x in member_found]            # replaces \")\" by \"\"\n",
    "\n",
    "print (member_found_replaced)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['yinkacrown', '36']\n",
      "['tsmall', '34']\n",
      "['okeymadu', '37']\n",
      "['walace99', '21']\n",
      "['vivicintia', '29']\n",
      "['hens', '26']\n",
      "['datrailblazer', '29']\n",
      "['sunnydel', '38']\n",
      "['LANRYUS', '40']\n",
      "['Senorprinz', '76']\n",
      "['AugustusA1', '29']\n",
      "['itsik', '32']\n",
      "['reel14', '34']\n",
      "['sambroose', '25']\n",
      "['jeyne', '29']\n",
      "['olabent85', '33']\n",
      "['ajosegabriel', '23']\n",
      "['bukkylink', '48']\n",
      "['sunpet33', '27']\n",
      "['Ngoziezel', '29']\n",
      "['bjhere2009', '46']\n",
      "['Alfred234', '23']\n",
      "['Senator202020', '31']\n",
      "['Reallymilky', '26']\n",
      "['Gliano', '30']\n",
      "['princesscrown', '22']\n",
      "['jossy874', '31']\n",
      "['sirpedro', '26']\n",
      "['panch001', '30']\n",
      "['Atb4life22', '33']\n",
      "['TheLegalEagle', '23']\n",
      "['endtime1', '35']\n",
      "['sageer1706', '29']\n",
      "['goldony', '58']\n",
      "['OlalekanMultiD', '27']\n",
      "['Enigmaesq', '23']\n",
      "['Vicintonsh', '26']\n",
      "['dayoakinns', '30']\n",
      "['liilian', '26']\n",
      "['Eugenedimgba', '28']\n",
      "['sawsaw', '31']\n",
      "['SetonDuring', '81']\n",
      "['harlaryoh', '22']\n",
      "['Elduniya', '33']\n",
      "['Foldvibes', '25']\n",
      "['Horlar995', '23']\n",
      "['Impecca', '27']\n",
      "['bcbones', '32']\n",
      "['peta10', '29']\n",
      "['Alaminz', '26']\n",
      "['promo4', '29']\n",
      "['jnsoribe', '33']\n",
      "['Youngtrice', '20']\n",
      "['moses320', '24']\n",
      "['tycode', '25']\n",
      "['zykson', '22']\n",
      "['minasota', '23']\n",
      "['callmemikel', '29']\n",
      "['adebayobr', '22']\n",
      "['xperienced', '22']\n",
      "['RUGGEDWEAVER', '22']\n",
      "['Techgoon', '21']\n",
      "['Quanty', '23']\n",
      "['sitibemfen', '43']\n",
      "['GossipGirl1', '24']\n",
      "['abbeylah', '18']\n",
      "['Cashrex', '28']\n",
      "['Asap11', '29']\n",
      "['ikoroduvibes', '22']\n",
      "['banqalee', '27']\n",
      "['smarttony', '29']\n",
      "['Modelqwen', '23']\n",
      "['NelsonObas', '18']\n",
      "['ugochukwufrenzy', '25']\n",
      "['Justus180', '25']\n",
      "['sizzlingcold', '28']\n",
      "['Augustchild004', '24']\n",
      "['Alfred4wealth', '29']\n",
      "['funfemitte', '26']\n",
      "['richyboi', '30']\n",
      "['DrSad', '29']\n",
      "['tamsjay', '29']\n",
      "['Radical44', '26']\n",
      "['ysyowel', '29']\n",
      "['Ibrahim505', '33']\n",
      "['DOAI', '22']\n",
      "['Rjakleo', '20']\n",
      "['Doyinwealth', '27']\n",
      "['acadadavido', '26']\n",
      "['ojeleyed', '37']\n",
      "['intjgirl', '18']\n",
      "['Joeblazers', '34']\n",
      "['correctBlogger', '20']\n",
      "['BoyLikeEze', '19']\n",
      "['Emjayofficial', '25']\n",
      "['abdulazeez19', '19']\n",
      "['wakmuna', '36']\n",
      "['Twix123', '19']\n",
      "['Kennyson201', '24']\n",
      "['staylon', '20']\n",
      "['trustshowodd', '27']\n",
      "['Solokad', '26']\n",
      "['Babayero212', '26']\n",
      "['BaloArchy', '33']\n",
      "['Chiefhaywhy', '30']\n",
      "['ItzNafti', '24']\n",
      "['Onyemize4', '23']\n",
      "['Prowisest', '17']\n",
      "['Jessejayyyy', '59']\n"
     ]
    }
   ],
   "source": [
    "# Now split \"member_found_replaced\" based on '(' between the usernames and age\n",
    "# we use for loop to loop through each item of the \"member_found_replaced\" list above\n",
    "\n",
    "for y in member_found_replaced:\n",
    "    member_cleaned = y.split(\"(\")\n",
    "    print (member_cleaned)\n",
    "    \n",
    "# what we have \"member_cleaned\" is individual list with two elements each\n",
    "# lets combine all the lists into a dictionary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'yinkacrown': 36, 'tsmall': 34, 'okeymadu': 37, 'walace99': 21, 'vivicintia': 29, 'hens': 26, 'datrailblazer': 29, 'sunnydel': 38, 'LANRYUS': 40, 'Senorprinz': 76, 'AugustusA1': 29, 'itsik': 32, 'reel14': 34, 'sambroose': 25, 'jeyne': 29, 'olabent85': 33, 'ajosegabriel': 23, 'bukkylink': 48, 'sunpet33': 27, 'Ngoziezel': 29, 'bjhere2009': 46, 'Alfred234': 23, 'Senator202020': 31, 'Reallymilky': 26, 'Gliano': 30, 'princesscrown': 22, 'jossy874': 31, 'sirpedro': 26, 'panch001': 30, 'Atb4life22': 33, 'TheLegalEagle': 23, 'endtime1': 35, 'sageer1706': 29, 'goldony': 58, 'OlalekanMultiD': 27, 'Enigmaesq': 23, 'Vicintonsh': 26, 'dayoakinns': 30, 'liilian': 26, 'Eugenedimgba': 28, 'sawsaw': 31, 'SetonDuring': 81, 'harlaryoh': 22, 'Elduniya': 33, 'Foldvibes': 25, 'Horlar995': 23, 'Impecca': 27, 'bcbones': 32, 'peta10': 29, 'Alaminz': 26, 'promo4': 29, 'jnsoribe': 33, 'Youngtrice': 20, 'moses320': 24, 'tycode': 25, 'zykson': 22, 'minasota': 23, 'callmemikel': 29, 'adebayobr': 22, 'xperienced': 22, 'RUGGEDWEAVER': 22, 'Techgoon': 21, 'Quanty': 23, 'sitibemfen': 43, 'GossipGirl1': 24, 'abbeylah': 18, 'Cashrex': 28, 'Asap11': 29, 'ikoroduvibes': 22, 'banqalee': 27, 'smarttony': 29, 'Modelqwen': 23, 'NelsonObas': 18, 'ugochukwufrenzy': 25, 'Justus180': 25, 'sizzlingcold': 28, 'Augustchild004': 24, 'Alfred4wealth': 29, 'funfemitte': 26, 'richyboi': 30, 'DrSad': 29, 'tamsjay': 29, 'Radical44': 26, 'ysyowel': 29, 'Ibrahim505': 33, 'DOAI': 22, 'Rjakleo': 20, 'Doyinwealth': 27, 'acadadavido': 26, 'ojeleyed': 37, 'intjgirl': 18, 'Joeblazers': 34, 'correctBlogger': 20, 'BoyLikeEze': 19, 'Emjayofficial': 25, 'abdulazeez19': 19, 'wakmuna': 36, 'Twix123': 19, 'Kennyson201': 24, 'staylon': 20, 'trustshowodd': 27, 'Solokad': 26, 'Babayero212': 26, 'BaloArchy': 33, 'Chiefhaywhy': 30, 'ItzNafti': 24, 'Onyemize4': 23, 'Prowisest': 17, 'Jessejayyyy': 59}\n"
     ]
    }
   ],
   "source": [
    "# we first declare \"member_cleaned\" as empty dictiory, so we can append individaul list above into it\n",
    "\n",
    "member_cleaned = {}\n",
    "\n",
    "for y in member_found_replaced:\n",
    "    temp_data = y.split(\"(\")\n",
    "    \n",
    "    member_cleaned[temp_data[0]] = int(temp_data[1])\n",
    "    \n",
    "print (member_cleaned)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Username</th>\n",
       "      <th>Age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>yinkacrown</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>tsmall</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>okeymadu</td>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>walace99</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>vivicintia</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>hens</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>datrailblazer</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>sunnydel</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>LANRYUS</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Senorprinz</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>AugustusA1</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>itsik</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>reel14</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>sambroose</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>jeyne</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>olabent85</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>ajosegabriel</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>bukkylink</td>\n",
       "      <td>48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>sunpet33</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Ngoziezel</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>bjhere2009</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Alfred234</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Senator202020</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Reallymilky</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Gliano</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>princesscrown</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>jossy874</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>sirpedro</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>panch001</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Atb4life22</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>richyboi</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>DrSad</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>tamsjay</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>Radical44</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>ysyowel</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>Ibrahim505</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>DOAI</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>Rjakleo</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>Doyinwealth</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>acadadavido</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>ojeleyed</td>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>intjgirl</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>Joeblazers</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>correctBlogger</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>BoyLikeEze</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>Emjayofficial</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>abdulazeez19</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>wakmuna</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>Twix123</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>Kennyson201</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>staylon</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>trustshowodd</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>Solokad</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>Babayero212</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <td>BaloArchy</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104</th>\n",
       "      <td>Chiefhaywhy</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>105</th>\n",
       "      <td>ItzNafti</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>106</th>\n",
       "      <td>Onyemize4</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107</th>\n",
       "      <td>Prowisest</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>108</th>\n",
       "      <td>Jessejayyyy</td>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>109 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Username  Age\n",
       "0        yinkacrown   36\n",
       "1            tsmall   34\n",
       "2          okeymadu   37\n",
       "3          walace99   21\n",
       "4        vivicintia   29\n",
       "5              hens   26\n",
       "6     datrailblazer   29\n",
       "7          sunnydel   38\n",
       "8           LANRYUS   40\n",
       "9        Senorprinz   76\n",
       "10       AugustusA1   29\n",
       "11            itsik   32\n",
       "12           reel14   34\n",
       "13        sambroose   25\n",
       "14            jeyne   29\n",
       "15        olabent85   33\n",
       "16     ajosegabriel   23\n",
       "17        bukkylink   48\n",
       "18         sunpet33   27\n",
       "19        Ngoziezel   29\n",
       "20       bjhere2009   46\n",
       "21        Alfred234   23\n",
       "22    Senator202020   31\n",
       "23      Reallymilky   26\n",
       "24           Gliano   30\n",
       "25    princesscrown   22\n",
       "26         jossy874   31\n",
       "27         sirpedro   26\n",
       "28         panch001   30\n",
       "29       Atb4life22   33\n",
       "..              ...  ...\n",
       "79         richyboi   30\n",
       "80            DrSad   29\n",
       "81          tamsjay   29\n",
       "82        Radical44   26\n",
       "83          ysyowel   29\n",
       "84       Ibrahim505   33\n",
       "85             DOAI   22\n",
       "86          Rjakleo   20\n",
       "87      Doyinwealth   27\n",
       "88      acadadavido   26\n",
       "89         ojeleyed   37\n",
       "90         intjgirl   18\n",
       "91       Joeblazers   34\n",
       "92   correctBlogger   20\n",
       "93       BoyLikeEze   19\n",
       "94    Emjayofficial   25\n",
       "95     abdulazeez19   19\n",
       "96          wakmuna   36\n",
       "97          Twix123   19\n",
       "98      Kennyson201   24\n",
       "99          staylon   20\n",
       "100    trustshowodd   27\n",
       "101         Solokad   26\n",
       "102     Babayero212   26\n",
       "103       BaloArchy   33\n",
       "104     Chiefhaywhy   30\n",
       "105        ItzNafti   24\n",
       "106       Onyemize4   23\n",
       "107       Prowisest   17\n",
       "108     Jessejayyyy   59\n",
       "\n",
       "[109 rows x 2 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# covert the dictionary \"member_cleaned\" above into a Pandas DataFrame\n",
    "# Note: in python 3, we have to convert the dictionary items into a list to work with Pandas DataFrame\n",
    "\n",
    "\n",
    "# define the column names\n",
    "columns_name = [\"Username\", \"Age\"]\n",
    "\n",
    "# df = pd.DataFrame(member_cleaned.items(), columns = columns_name )   # this is for python 2\n",
    "df = pd.DataFrame(list(member_cleaned.items()), columns = columns_name )\n",
    "\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Username</th>\n",
       "      <th>Age</th>\n",
       "      <th>Date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>yinkacrown</td>\n",
       "      <td>36</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>tsmall</td>\n",
       "      <td>34</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>okeymadu</td>\n",
       "      <td>37</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>walace99</td>\n",
       "      <td>21</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>vivicintia</td>\n",
       "      <td>29</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>hens</td>\n",
       "      <td>26</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>datrailblazer</td>\n",
       "      <td>29</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>sunnydel</td>\n",
       "      <td>38</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>LANRYUS</td>\n",
       "      <td>40</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Senorprinz</td>\n",
       "      <td>76</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>AugustusA1</td>\n",
       "      <td>29</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>itsik</td>\n",
       "      <td>32</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>reel14</td>\n",
       "      <td>34</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>sambroose</td>\n",
       "      <td>25</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>jeyne</td>\n",
       "      <td>29</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>olabent85</td>\n",
       "      <td>33</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>ajosegabriel</td>\n",
       "      <td>23</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>bukkylink</td>\n",
       "      <td>48</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>sunpet33</td>\n",
       "      <td>27</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Ngoziezel</td>\n",
       "      <td>29</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>bjhere2009</td>\n",
       "      <td>46</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Alfred234</td>\n",
       "      <td>23</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Senator202020</td>\n",
       "      <td>31</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Reallymilky</td>\n",
       "      <td>26</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Gliano</td>\n",
       "      <td>30</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>princesscrown</td>\n",
       "      <td>22</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>jossy874</td>\n",
       "      <td>31</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>sirpedro</td>\n",
       "      <td>26</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>panch001</td>\n",
       "      <td>30</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Atb4life22</td>\n",
       "      <td>33</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>richyboi</td>\n",
       "      <td>30</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>DrSad</td>\n",
       "      <td>29</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>tamsjay</td>\n",
       "      <td>29</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>Radical44</td>\n",
       "      <td>26</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>ysyowel</td>\n",
       "      <td>29</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>Ibrahim505</td>\n",
       "      <td>33</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>DOAI</td>\n",
       "      <td>22</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>Rjakleo</td>\n",
       "      <td>20</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>Doyinwealth</td>\n",
       "      <td>27</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>acadadavido</td>\n",
       "      <td>26</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>ojeleyed</td>\n",
       "      <td>37</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>intjgirl</td>\n",
       "      <td>18</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>Joeblazers</td>\n",
       "      <td>34</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>correctBlogger</td>\n",
       "      <td>20</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>BoyLikeEze</td>\n",
       "      <td>19</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>Emjayofficial</td>\n",
       "      <td>25</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>abdulazeez19</td>\n",
       "      <td>19</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>wakmuna</td>\n",
       "      <td>36</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>Twix123</td>\n",
       "      <td>19</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>Kennyson201</td>\n",
       "      <td>24</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>staylon</td>\n",
       "      <td>20</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>trustshowodd</td>\n",
       "      <td>27</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>Solokad</td>\n",
       "      <td>26</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>Babayero212</td>\n",
       "      <td>26</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <td>BaloArchy</td>\n",
       "      <td>33</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104</th>\n",
       "      <td>Chiefhaywhy</td>\n",
       "      <td>30</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>105</th>\n",
       "      <td>ItzNafti</td>\n",
       "      <td>24</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>106</th>\n",
       "      <td>Onyemize4</td>\n",
       "      <td>23</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107</th>\n",
       "      <td>Prowisest</td>\n",
       "      <td>17</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>108</th>\n",
       "      <td>Jessejayyyy</td>\n",
       "      <td>59</td>\n",
       "      <td>2018-08-04</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>109 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Username  Age        Date\n",
       "0        yinkacrown   36  2018-08-04\n",
       "1            tsmall   34  2018-08-04\n",
       "2          okeymadu   37  2018-08-04\n",
       "3          walace99   21  2018-08-04\n",
       "4        vivicintia   29  2018-08-04\n",
       "5              hens   26  2018-08-04\n",
       "6     datrailblazer   29  2018-08-04\n",
       "7          sunnydel   38  2018-08-04\n",
       "8           LANRYUS   40  2018-08-04\n",
       "9        Senorprinz   76  2018-08-04\n",
       "10       AugustusA1   29  2018-08-04\n",
       "11            itsik   32  2018-08-04\n",
       "12           reel14   34  2018-08-04\n",
       "13        sambroose   25  2018-08-04\n",
       "14            jeyne   29  2018-08-04\n",
       "15        olabent85   33  2018-08-04\n",
       "16     ajosegabriel   23  2018-08-04\n",
       "17        bukkylink   48  2018-08-04\n",
       "18         sunpet33   27  2018-08-04\n",
       "19        Ngoziezel   29  2018-08-04\n",
       "20       bjhere2009   46  2018-08-04\n",
       "21        Alfred234   23  2018-08-04\n",
       "22    Senator202020   31  2018-08-04\n",
       "23      Reallymilky   26  2018-08-04\n",
       "24           Gliano   30  2018-08-04\n",
       "25    princesscrown   22  2018-08-04\n",
       "26         jossy874   31  2018-08-04\n",
       "27         sirpedro   26  2018-08-04\n",
       "28         panch001   30  2018-08-04\n",
       "29       Atb4life22   33  2018-08-04\n",
       "..              ...  ...         ...\n",
       "79         richyboi   30  2018-08-04\n",
       "80            DrSad   29  2018-08-04\n",
       "81          tamsjay   29  2018-08-04\n",
       "82        Radical44   26  2018-08-04\n",
       "83          ysyowel   29  2018-08-04\n",
       "84       Ibrahim505   33  2018-08-04\n",
       "85             DOAI   22  2018-08-04\n",
       "86          Rjakleo   20  2018-08-04\n",
       "87      Doyinwealth   27  2018-08-04\n",
       "88      acadadavido   26  2018-08-04\n",
       "89         ojeleyed   37  2018-08-04\n",
       "90         intjgirl   18  2018-08-04\n",
       "91       Joeblazers   34  2018-08-04\n",
       "92   correctBlogger   20  2018-08-04\n",
       "93       BoyLikeEze   19  2018-08-04\n",
       "94    Emjayofficial   25  2018-08-04\n",
       "95     abdulazeez19   19  2018-08-04\n",
       "96          wakmuna   36  2018-08-04\n",
       "97          Twix123   19  2018-08-04\n",
       "98      Kennyson201   24  2018-08-04\n",
       "99          staylon   20  2018-08-04\n",
       "100    trustshowodd   27  2018-08-04\n",
       "101         Solokad   26  2018-08-04\n",
       "102     Babayero212   26  2018-08-04\n",
       "103       BaloArchy   33  2018-08-04\n",
       "104     Chiefhaywhy   30  2018-08-04\n",
       "105        ItzNafti   24  2018-08-04\n",
       "106       Onyemize4   23  2018-08-04\n",
       "107       Prowisest   17  2018-08-04\n",
       "108     Jessejayyyy   59  2018-08-04\n",
       "\n",
       "[109 rows x 3 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Lets add a column for today's date\n",
    "\n",
    "# using the datetime module\n",
    "\n",
    "\n",
    "todays_date = datetime.now().date()\n",
    "\n",
    "df[\"Date\"] = todays_date\n",
    "\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Let save the dataframe into csv file\n",
    "# we name the csv file with the current date, i.e: 14/08/2016 will be 20160814 for the file name\n",
    "\n",
    "csv_name = todays_date.strftime(\"%Y%m%d\")\n",
    "df.to_csv(csv_name + \".csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>94.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>29.436170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>8.378876</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>18.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>25.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>29.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>31.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>88.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Age\n",
       "count  94.000000\n",
       "mean   29.436170\n",
       "std     8.378876\n",
       "min    18.000000\n",
       "25%    25.000000\n",
       "50%    29.000000\n",
       "75%    31.000000\n",
       "max    88.000000"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Checking the statistical summary of the age column\n",
    "\n",
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Username</th>\n",
       "      <th>Age</th>\n",
       "      <th>Date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>ChuksManny</td>\n",
       "      <td>88</td>\n",
       "      <td>2018-08-03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ray4life</td>\n",
       "      <td>44</td>\n",
       "      <td>2018-08-03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>charmosky</td>\n",
       "      <td>44</td>\n",
       "      <td>2018-08-03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>abelify1</td>\n",
       "      <td>41</td>\n",
       "      <td>2018-08-03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>padrey</td>\n",
       "      <td>40</td>\n",
       "      <td>2018-08-03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>emyibe</td>\n",
       "      <td>39</td>\n",
       "      <td>2018-08-03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>greymatter15</td>\n",
       "      <td>39</td>\n",
       "      <td>2018-08-03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>miltonchux</td>\n",
       "      <td>39</td>\n",
       "      <td>2018-08-03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>busuyi44</td>\n",
       "      <td>39</td>\n",
       "      <td>2018-08-03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>smoothrun</td>\n",
       "      <td>39</td>\n",
       "      <td>2018-08-03</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Username  Age        Date\n",
       "59    ChuksManny   88  2018-08-03\n",
       "2       ray4life   44  2018-08-03\n",
       "8      charmosky   44  2018-08-03\n",
       "78      abelify1   41  2018-08-03\n",
       "41        padrey   40  2018-08-03\n",
       "10        emyibe   39  2018-08-03\n",
       "44  greymatter15   39  2018-08-03\n",
       "39    miltonchux   39  2018-08-03\n",
       "29      busuyi44   39  2018-08-03\n",
       "23     smoothrun   39  2018-08-03"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# First 10 nOldet members celbrating\n",
    "\n",
    "df.sort_values(by=\"Age\", ascending=False)[:10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Username</th>\n",
       "      <th>Age</th>\n",
       "      <th>Date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>OfiaeliSomto</td>\n",
       "      <td>18</td>\n",
       "      <td>2018-08-03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>Cool23</td>\n",
       "      <td>19</td>\n",
       "      <td>2018-08-03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>odubayor</td>\n",
       "      <td>19</td>\n",
       "      <td>2018-08-03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>SEEDORF441</td>\n",
       "      <td>20</td>\n",
       "      <td>2018-08-03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>Pauline23</td>\n",
       "      <td>20</td>\n",
       "      <td>2018-08-03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>hardeybawler</td>\n",
       "      <td>21</td>\n",
       "      <td>2018-08-03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>dariuspemba</td>\n",
       "      <td>21</td>\n",
       "      <td>2018-08-03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>Joegalvinsblog</td>\n",
       "      <td>21</td>\n",
       "      <td>2018-08-03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>thickminaj</td>\n",
       "      <td>21</td>\n",
       "      <td>2018-08-03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Zainal</td>\n",
       "      <td>22</td>\n",
       "      <td>2018-08-03</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Username  Age        Date\n",
       "83    OfiaeliSomto   18  2018-08-03\n",
       "54          Cool23   19  2018-08-03\n",
       "69        odubayor   19  2018-08-03\n",
       "58      SEEDORF441   20  2018-08-03\n",
       "87       Pauline23   20  2018-08-03\n",
       "74    hardeybawler   21  2018-08-03\n",
       "92     dariuspemba   21  2018-08-03\n",
       "72  Joegalvinsblog   21  2018-08-03\n",
       "68      thickminaj   21  2018-08-03\n",
       "27          Zainal   22  2018-08-03"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# First 10 nYoungest members celbrating\n",
    "\n",
    "df.sort_values(by=\"Age\", ascending=True)[:10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Username</th>\n",
       "      <th>Age</th>\n",
       "      <th>Date</th>\n",
       "      <th>Age_10_Plus</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Emilo</td>\n",
       "      <td>37</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>dolphinx</td>\n",
       "      <td>33</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ray4life</td>\n",
       "      <td>44</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>lakesider</td>\n",
       "      <td>33</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>sulakishop</td>\n",
       "      <td>37</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>MANGAM</td>\n",
       "      <td>36</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>jboi08</td>\n",
       "      <td>31</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>osas03</td>\n",
       "      <td>26</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>charmosky</td>\n",
       "      <td>44</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>JaneOU</td>\n",
       "      <td>33</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>emyibe</td>\n",
       "      <td>39</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>greyce</td>\n",
       "      <td>22</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>sKeetz</td>\n",
       "      <td>25</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Fran6ixesq</td>\n",
       "      <td>31</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>iykomo0</td>\n",
       "      <td>24</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Godson201333</td>\n",
       "      <td>30</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>sabrosa07</td>\n",
       "      <td>28</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>aimoghagbon</td>\n",
       "      <td>33</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Michael125</td>\n",
       "      <td>25</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>RotrEmmanuel</td>\n",
       "      <td>29</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Gregdcutie</td>\n",
       "      <td>23</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>CodeineJunkiee</td>\n",
       "      <td>32</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>abdul7465</td>\n",
       "      <td>29</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>smoothrun</td>\n",
       "      <td>39</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>MISSCONGENIALITY</td>\n",
       "      <td>25</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>taiwokyle</td>\n",
       "      <td>28</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>wiringdpt</td>\n",
       "      <td>30</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Zainal</td>\n",
       "      <td>22</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>gingger</td>\n",
       "      <td>27</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>busuyi44</td>\n",
       "      <td>39</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>Ebije1</td>\n",
       "      <td>28</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>Cattman</td>\n",
       "      <td>36</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>chigo5</td>\n",
       "      <td>25</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>d1whizzy</td>\n",
       "      <td>36</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>thickminaj</td>\n",
       "      <td>21</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>odubayor</td>\n",
       "      <td>19</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>hadebeeceAJ</td>\n",
       "      <td>30</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>dobujay</td>\n",
       "      <td>29</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>Joegalvinsblog</td>\n",
       "      <td>21</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>Ochule1</td>\n",
       "      <td>30</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>hardeybawler</td>\n",
       "      <td>21</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>austyne22ex</td>\n",
       "      <td>29</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>DamilolaDaniel1</td>\n",
       "      <td>25</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>ULTISHIBOY</td>\n",
       "      <td>28</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>abelify1</td>\n",
       "      <td>41</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>Perfectnumber6</td>\n",
       "      <td>24</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>Kenxxy</td>\n",
       "      <td>29</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>Okoyedavid3</td>\n",
       "      <td>25</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>Ewroghene1</td>\n",
       "      <td>22</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>OfiaeliSomto</td>\n",
       "      <td>18</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>nkerealfred</td>\n",
       "      <td>26</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>chinavs9ja</td>\n",
       "      <td>25</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>Equilibrium959</td>\n",
       "      <td>26</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>Pauline23</td>\n",
       "      <td>20</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>minista94</td>\n",
       "      <td>31</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>ChuksManny82</td>\n",
       "      <td>26</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>Collinzbrown31</td>\n",
       "      <td>23</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>Scheun</td>\n",
       "      <td>34</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>dariuspemba</td>\n",
       "      <td>21</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>brendinlogistic</td>\n",
       "      <td>29</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>94 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Username  Age        Date  Age_10_Plus\n",
       "0              Emilo   37  2018-08-03           47\n",
       "1           dolphinx   33  2018-08-03           43\n",
       "2           ray4life   44  2018-08-03           54\n",
       "3          lakesider   33  2018-08-03           43\n",
       "4         sulakishop   37  2018-08-03           47\n",
       "5             MANGAM   36  2018-08-03           46\n",
       "6             jboi08   31  2018-08-03           41\n",
       "7             osas03   26  2018-08-03           36\n",
       "8          charmosky   44  2018-08-03           54\n",
       "9             JaneOU   33  2018-08-03           43\n",
       "10            emyibe   39  2018-08-03           49\n",
       "11            greyce   22  2018-08-03           32\n",
       "12            sKeetz   25  2018-08-03           35\n",
       "13        Fran6ixesq   31  2018-08-03           41\n",
       "14           iykomo0   24  2018-08-03           34\n",
       "15      Godson201333   30  2018-08-03           40\n",
       "16         sabrosa07   28  2018-08-03           38\n",
       "17       aimoghagbon   33  2018-08-03           43\n",
       "18        Michael125   25  2018-08-03           35\n",
       "19      RotrEmmanuel   29  2018-08-03           39\n",
       "20        Gregdcutie   23  2018-08-03           33\n",
       "21    CodeineJunkiee   32  2018-08-03           42\n",
       "22         abdul7465   29  2018-08-03           39\n",
       "23         smoothrun   39  2018-08-03           49\n",
       "24  MISSCONGENIALITY   25  2018-08-03           35\n",
       "25         taiwokyle   28  2018-08-03           38\n",
       "26         wiringdpt   30  2018-08-03           40\n",
       "27            Zainal   22  2018-08-03           32\n",
       "28           gingger   27  2018-08-03           37\n",
       "29          busuyi44   39  2018-08-03           49\n",
       "..               ...  ...         ...          ...\n",
       "64            Ebije1   28  2018-08-03           38\n",
       "65           Cattman   36  2018-08-03           46\n",
       "66            chigo5   25  2018-08-03           35\n",
       "67          d1whizzy   36  2018-08-03           46\n",
       "68        thickminaj   21  2018-08-03           31\n",
       "69          odubayor   19  2018-08-03           29\n",
       "70       hadebeeceAJ   30  2018-08-03           40\n",
       "71           dobujay   29  2018-08-03           39\n",
       "72    Joegalvinsblog   21  2018-08-03           31\n",
       "73           Ochule1   30  2018-08-03           40\n",
       "74      hardeybawler   21  2018-08-03           31\n",
       "75       austyne22ex   29  2018-08-03           39\n",
       "76   DamilolaDaniel1   25  2018-08-03           35\n",
       "77        ULTISHIBOY   28  2018-08-03           38\n",
       "78          abelify1   41  2018-08-03           51\n",
       "79    Perfectnumber6   24  2018-08-03           34\n",
       "80            Kenxxy   29  2018-08-03           39\n",
       "81       Okoyedavid3   25  2018-08-03           35\n",
       "82        Ewroghene1   22  2018-08-03           32\n",
       "83      OfiaeliSomto   18  2018-08-03           28\n",
       "84       nkerealfred   26  2018-08-03           36\n",
       "85        chinavs9ja   25  2018-08-03           35\n",
       "86    Equilibrium959   26  2018-08-03           36\n",
       "87         Pauline23   20  2018-08-03           30\n",
       "88         minista94   31  2018-08-03           41\n",
       "89      ChuksManny82   26  2018-08-03           36\n",
       "90    Collinzbrown31   23  2018-08-03           33\n",
       "91            Scheun   34  2018-08-03           44\n",
       "92       dariuspemba   21  2018-08-03           31\n",
       "93   brendinlogistic   29  2018-08-03           39\n",
       "\n",
       "[94 rows x 4 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# to answer, How old will each celebrant be in 10years?\n",
    "\n",
    "df[\"Age_10_Plus\"] = df[\"Age\"] + 10\n",
    "\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Username</th>\n",
       "      <th>Age</th>\n",
       "      <th>Date</th>\n",
       "      <th>Age_10_Plus</th>\n",
       "      <th>Age_at_2005</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Emilo</td>\n",
       "      <td>37</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>47</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>dolphinx</td>\n",
       "      <td>33</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>43</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ray4life</td>\n",
       "      <td>44</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>54</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>lakesider</td>\n",
       "      <td>33</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>43</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>sulakishop</td>\n",
       "      <td>37</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>47</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>MANGAM</td>\n",
       "      <td>36</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>46</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>jboi08</td>\n",
       "      <td>31</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>41</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>osas03</td>\n",
       "      <td>26</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>36</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>charmosky</td>\n",
       "      <td>44</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>54</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>JaneOU</td>\n",
       "      <td>33</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>43</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>emyibe</td>\n",
       "      <td>39</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>49</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>greyce</td>\n",
       "      <td>22</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>32</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>sKeetz</td>\n",
       "      <td>25</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>35</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Fran6ixesq</td>\n",
       "      <td>31</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>41</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>iykomo0</td>\n",
       "      <td>24</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>34</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Godson201333</td>\n",
       "      <td>30</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>40</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>sabrosa07</td>\n",
       "      <td>28</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>38</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>aimoghagbon</td>\n",
       "      <td>33</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>43</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Michael125</td>\n",
       "      <td>25</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>35</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>RotrEmmanuel</td>\n",
       "      <td>29</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>39</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Gregdcutie</td>\n",
       "      <td>23</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>33</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>CodeineJunkiee</td>\n",
       "      <td>32</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>42</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>abdul7465</td>\n",
       "      <td>29</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>39</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>smoothrun</td>\n",
       "      <td>39</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>49</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>MISSCONGENIALITY</td>\n",
       "      <td>25</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>35</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>taiwokyle</td>\n",
       "      <td>28</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>38</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>wiringdpt</td>\n",
       "      <td>30</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>40</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Zainal</td>\n",
       "      <td>22</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>32</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>gingger</td>\n",
       "      <td>27</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>37</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>busuyi44</td>\n",
       "      <td>39</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>49</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>Ebije1</td>\n",
       "      <td>28</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>38</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>Cattman</td>\n",
       "      <td>36</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>46</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>chigo5</td>\n",
       "      <td>25</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>35</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>d1whizzy</td>\n",
       "      <td>36</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>46</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>thickminaj</td>\n",
       "      <td>21</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>31</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>odubayor</td>\n",
       "      <td>19</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>29</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>hadebeeceAJ</td>\n",
       "      <td>30</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>40</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>dobujay</td>\n",
       "      <td>29</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>39</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>Joegalvinsblog</td>\n",
       "      <td>21</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>31</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>Ochule1</td>\n",
       "      <td>30</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>40</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>hardeybawler</td>\n",
       "      <td>21</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>31</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>austyne22ex</td>\n",
       "      <td>29</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>39</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>DamilolaDaniel1</td>\n",
       "      <td>25</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>35</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>ULTISHIBOY</td>\n",
       "      <td>28</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>38</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>abelify1</td>\n",
       "      <td>41</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>51</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>Perfectnumber6</td>\n",
       "      <td>24</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>34</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>Kenxxy</td>\n",
       "      <td>29</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>39</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>Okoyedavid3</td>\n",
       "      <td>25</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>35</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>Ewroghene1</td>\n",
       "      <td>22</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>32</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>OfiaeliSomto</td>\n",
       "      <td>18</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>28</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>nkerealfred</td>\n",
       "      <td>26</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>36</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>chinavs9ja</td>\n",
       "      <td>25</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>35</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>Equilibrium959</td>\n",
       "      <td>26</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>36</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>Pauline23</td>\n",
       "      <td>20</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>30</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>minista94</td>\n",
       "      <td>31</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>41</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>ChuksManny82</td>\n",
       "      <td>26</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>36</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>Collinzbrown31</td>\n",
       "      <td>23</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>33</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>Scheun</td>\n",
       "      <td>34</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>44</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>dariuspemba</td>\n",
       "      <td>21</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>31</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>brendinlogistic</td>\n",
       "      <td>29</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>39</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>94 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Username  Age        Date  Age_10_Plus  Age_at_2005\n",
       "0              Emilo   37  2018-08-03           47           26\n",
       "1           dolphinx   33  2018-08-03           43           22\n",
       "2           ray4life   44  2018-08-03           54           33\n",
       "3          lakesider   33  2018-08-03           43           22\n",
       "4         sulakishop   37  2018-08-03           47           26\n",
       "5             MANGAM   36  2018-08-03           46           25\n",
       "6             jboi08   31  2018-08-03           41           20\n",
       "7             osas03   26  2018-08-03           36           15\n",
       "8          charmosky   44  2018-08-03           54           33\n",
       "9             JaneOU   33  2018-08-03           43           22\n",
       "10            emyibe   39  2018-08-03           49           28\n",
       "11            greyce   22  2018-08-03           32           11\n",
       "12            sKeetz   25  2018-08-03           35           14\n",
       "13        Fran6ixesq   31  2018-08-03           41           20\n",
       "14           iykomo0   24  2018-08-03           34           13\n",
       "15      Godson201333   30  2018-08-03           40           19\n",
       "16         sabrosa07   28  2018-08-03           38           17\n",
       "17       aimoghagbon   33  2018-08-03           43           22\n",
       "18        Michael125   25  2018-08-03           35           14\n",
       "19      RotrEmmanuel   29  2018-08-03           39           18\n",
       "20        Gregdcutie   23  2018-08-03           33           12\n",
       "21    CodeineJunkiee   32  2018-08-03           42           21\n",
       "22         abdul7465   29  2018-08-03           39           18\n",
       "23         smoothrun   39  2018-08-03           49           28\n",
       "24  MISSCONGENIALITY   25  2018-08-03           35           14\n",
       "25         taiwokyle   28  2018-08-03           38           17\n",
       "26         wiringdpt   30  2018-08-03           40           19\n",
       "27            Zainal   22  2018-08-03           32           11\n",
       "28           gingger   27  2018-08-03           37           16\n",
       "29          busuyi44   39  2018-08-03           49           28\n",
       "..               ...  ...         ...          ...          ...\n",
       "64            Ebije1   28  2018-08-03           38           17\n",
       "65           Cattman   36  2018-08-03           46           25\n",
       "66            chigo5   25  2018-08-03           35           14\n",
       "67          d1whizzy   36  2018-08-03           46           25\n",
       "68        thickminaj   21  2018-08-03           31           10\n",
       "69          odubayor   19  2018-08-03           29            8\n",
       "70       hadebeeceAJ   30  2018-08-03           40           19\n",
       "71           dobujay   29  2018-08-03           39           18\n",
       "72    Joegalvinsblog   21  2018-08-03           31           10\n",
       "73           Ochule1   30  2018-08-03           40           19\n",
       "74      hardeybawler   21  2018-08-03           31           10\n",
       "75       austyne22ex   29  2018-08-03           39           18\n",
       "76   DamilolaDaniel1   25  2018-08-03           35           14\n",
       "77        ULTISHIBOY   28  2018-08-03           38           17\n",
       "78          abelify1   41  2018-08-03           51           30\n",
       "79    Perfectnumber6   24  2018-08-03           34           13\n",
       "80            Kenxxy   29  2018-08-03           39           18\n",
       "81       Okoyedavid3   25  2018-08-03           35           14\n",
       "82        Ewroghene1   22  2018-08-03           32           11\n",
       "83      OfiaeliSomto   18  2018-08-03           28            7\n",
       "84       nkerealfred   26  2018-08-03           36           15\n",
       "85        chinavs9ja   25  2018-08-03           35           14\n",
       "86    Equilibrium959   26  2018-08-03           36           15\n",
       "87         Pauline23   20  2018-08-03           30            9\n",
       "88         minista94   31  2018-08-03           41           20\n",
       "89      ChuksManny82   26  2018-08-03           36           15\n",
       "90    Collinzbrown31   23  2018-08-03           33           12\n",
       "91            Scheun   34  2018-08-03           44           23\n",
       "92       dariuspemba   21  2018-08-03           31           10\n",
       "93   brendinlogistic   29  2018-08-03           39           18\n",
       "\n",
       "[94 rows x 5 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# age at 2005 when NairaLand was established\n",
    "df[\"Age_at_2005\"] = df[\"Age\"] - 11\n",
    "\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "# First 10 youngest members celebrating\n",
    "\n",
    "youngest_10 = df.sort_values(by=\"Age\", ascending=True)[:10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x75e46b8da0>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# To display the plot within the Jupyter notebook\n",
    "%matplotlib inline\n",
    "\n",
    "youngest_10.plot(x=\"Username\", y=\"Age\", kind=\"bar\", title=\"10 Youngest Members Celebrating\")\n",
    "\n",
    "youngest_10.plot(x=\"Username\", y=\"Age\", kind=\"barh\", title=\"10 Youngest Members Celebrating\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x75e46138d0>"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# To display the plot within the Jupyter notebook\n",
    "%matplotlib inline\n",
    "\n",
    "youngest_10.plot(x=\"Username\", y=\"Age\", kind=\"hist\", title=\"10 Youngest Members Celebrating\")\n",
    "\n",
    "youngest_10.plot(x=\"Username\", y=\"Age\", kind=\"box\", title=\"10 Youngest Members Celebrating\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "'int' object is not subscriptable",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-17-b400209bb454>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[1;36m20180803\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'Age'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mhist\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m: 'int' object is not subscriptable"
     ]
    }
   ],
   "source": [
    "20180803['Age'].hist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x75e420d6a0>"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# To display the plot within the Jupyter notebook\n",
    "%matplotlib inline\n",
    "\n",
    "youngest_10.plot(x=\"Username\", y=\"Age\", kind=\"pie\", title=\"10 Youngest Members Celebrating\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Username</th>\n",
       "      <th>Age</th>\n",
       "      <th>Date</th>\n",
       "      <th>Age_10_Plus</th>\n",
       "      <th>Age_at_2005</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>OfiaeliSomto</td>\n",
       "      <td>18</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>28</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>Cool23</td>\n",
       "      <td>19</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>29</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>odubayor</td>\n",
       "      <td>19</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>29</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>SEEDORF441</td>\n",
       "      <td>20</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>30</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>Pauline23</td>\n",
       "      <td>20</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>30</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>hardeybawler</td>\n",
       "      <td>21</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>31</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>dariuspemba</td>\n",
       "      <td>21</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>31</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>Joegalvinsblog</td>\n",
       "      <td>21</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>31</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>thickminaj</td>\n",
       "      <td>21</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>31</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Zainal</td>\n",
       "      <td>22</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>32</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Username  Age        Date  Age_10_Plus  Age_at_2005\n",
       "83    OfiaeliSomto   18  2018-08-03           28            7\n",
       "54          Cool23   19  2018-08-03           29            8\n",
       "69        odubayor   19  2018-08-03           29            8\n",
       "58      SEEDORF441   20  2018-08-03           30            9\n",
       "87       Pauline23   20  2018-08-03           30            9\n",
       "74    hardeybawler   21  2018-08-03           31           10\n",
       "92     dariuspemba   21  2018-08-03           31           10\n",
       "72  Joegalvinsblog   21  2018-08-03           31           10\n",
       "68      thickminaj   21  2018-08-03           31           10\n",
       "27          Zainal   22  2018-08-03           32           11"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Let see the data of 10 youngest members\n",
    "youngest_10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "202"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Lets find the sum of the ages\n",
    "\n",
    "sum_youngest_10 = youngest_10[\"Age\"].sum()\n",
    "\n",
    "sum_youngest_10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Username</th>\n",
       "      <th>Age</th>\n",
       "      <th>Date</th>\n",
       "      <th>Age_10_Plus</th>\n",
       "      <th>Age_at_2005</th>\n",
       "      <th>Percentage</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>OfiaeliSomto</td>\n",
       "      <td>18</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>28</td>\n",
       "      <td>7</td>\n",
       "      <td>8.910891</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>Cool23</td>\n",
       "      <td>19</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>29</td>\n",
       "      <td>8</td>\n",
       "      <td>9.405941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>odubayor</td>\n",
       "      <td>19</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>29</td>\n",
       "      <td>8</td>\n",
       "      <td>9.405941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>SEEDORF441</td>\n",
       "      <td>20</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>30</td>\n",
       "      <td>9</td>\n",
       "      <td>9.900990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>Pauline23</td>\n",
       "      <td>20</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>30</td>\n",
       "      <td>9</td>\n",
       "      <td>9.900990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>hardeybawler</td>\n",
       "      <td>21</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>31</td>\n",
       "      <td>10</td>\n",
       "      <td>10.396040</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>dariuspemba</td>\n",
       "      <td>21</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>31</td>\n",
       "      <td>10</td>\n",
       "      <td>10.396040</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>Joegalvinsblog</td>\n",
       "      <td>21</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>31</td>\n",
       "      <td>10</td>\n",
       "      <td>10.396040</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>thickminaj</td>\n",
       "      <td>21</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>31</td>\n",
       "      <td>10</td>\n",
       "      <td>10.396040</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Zainal</td>\n",
       "      <td>22</td>\n",
       "      <td>2018-08-03</td>\n",
       "      <td>32</td>\n",
       "      <td>11</td>\n",
       "      <td>10.891089</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Username  Age        Date  Age_10_Plus  Age_at_2005  Percentage\n",
       "83    OfiaeliSomto   18  2018-08-03           28            7    8.910891\n",
       "54          Cool23   19  2018-08-03           29            8    9.405941\n",
       "69        odubayor   19  2018-08-03           29            8    9.405941\n",
       "58      SEEDORF441   20  2018-08-03           30            9    9.900990\n",
       "87       Pauline23   20  2018-08-03           30            9    9.900990\n",
       "74    hardeybawler   21  2018-08-03           31           10   10.396040\n",
       "92     dariuspemba   21  2018-08-03           31           10   10.396040\n",
       "72  Joegalvinsblog   21  2018-08-03           31           10   10.396040\n",
       "68      thickminaj   21  2018-08-03           31           10   10.396040\n",
       "27          Zainal   22  2018-08-03           32           11   10.891089"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Lets find the percentage of each first 10 youngest members and save it in a new column \"Percentage\"\n",
    "\n",
    "youngest_10[\"Percentage\"] = (youngest_10[\"Age\"] * 100) / (sum_youngest_10)\n",
    "\n",
    "\n",
    "# Nowlets check the new dataframe first 10 youngest members\n",
    "\n",
    "youngest_10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x75e3ecd2b0>"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABq8AAAJFCAYAAABDZ237AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMi4yLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvhp/UCwAAIABJREFUeJzs3X+QV/V97/HXRxDRYrhRyAXdKBgUccGsEdE0ptakBmMYc9VoiZnrz1SnGhS9dcpcay+9rWOcmBurMTEanDiTFExXxYyJ2gQhmVAnAoYIsv5olVSUUS65EFFRfpz7h8hoBUH8LvsJ+3jMMLJnz/dz3ruc8Z/nfM4pTdMEAAAAAAAAarBbTw8AAAAAAAAAbxKvAAAAAAAAqIZ4BQAAAAAAQDXEKwAAAAAAAKohXgEAAAAAAFAN8QoAAAAAAIBqiFcAAAAAAABUQ7wCAAAAAACgGuIVAAAAAAAA1ei7My82aNCgZtiwYTvzkgAAAAAAAFRgwYIF/7dpmsHbOm+nxqthw4Zl/vz5O/OSAAAAAAAAVKCU8tvtOc9jAwEAAAAAAKiGeAUAAAAAAEA1xCsAAAAAAACqsVPfebUl69aty7Jly7J27dqeHoUk/fv3T1tbW3bfffeeHgUAAAAAAOiFejxeLVu2LHvvvXeGDRuWUkpPj9OrNU2TlStXZtmyZRk+fHhPjwMAAAAAAPRCPf7YwLVr12bfffcVripQSsm+++5rFxwAAAAAANBjejxeJRGuKuLfAgAAAAAA6ElVxCsAAAAAAABIKnjn1X82bMqPW7re0q9+brvOu/vuu3Pqqaemq6srhx56aEtnAAAAAAAAYPvYebXJ9OnTc+yxx2bGjBk9PQoAAAAAAECvJV4lWbNmTebOnZtp06ZtjlcbN27MRRddlPb29kyYMCEnnXRSOjs7kyQLFizIcccdlyOPPDLjx4/P8uXLe3J8AAAAAACAXYZ4lWTmzJk58cQTc8ghh2SfffbJI488krvuuitLly7NokWL8t3vfjcPPfRQkmTdunWZNGlSOjs7s2DBgpx33nm58sore/gnAAAAAAAA2DVU986rnjB9+vRMnjw5STJx4sRMnz4969aty+mnn57ddtstQ4YMyfHHH58keeKJJ7J48eKccMIJSZINGzZk6NChPTY7AAAAAADArqTXx6uVK1fmwQcfzOLFi1NKyYYNG1JKySmnnLLF85umSXt7++adWAAAAAAAALROr39sYGdnZ84666z89re/zdKlS/Pss89m+PDhGTRoUO68885s3LgxL7zwQubMmZMkGTlyZFasWPG2xwg+9thjPfgTAAAAAAAA7Dqq23m19Kuf26nXmz59eqZMmfK2Y6eddlq6urrS1taW0aNH55BDDsnRRx+dgQMHpl+/funs7Mwll1yS1atXZ/369Zk8eXLa29t36twAAAAAAAC7ouri1c725o6qt7rkkkuSJGvWrMmAAQOycuXKjBs3LmPGjEmSdHR05Be/+MXOHBMAAAAAAKBX6PXx6t1MmDAhq1atyuuvv56rrroqQ4YM6emRAAAAAAAAdmni1bvY0q4sAAAAAAAAus9uPT0AAAAAAAAAvEm8AgAAAAAAoBriFQAAAAAAANUQrwAAAAAAAKhG354e4B2mDmzxeqtbux4AAAAAAADdpr541UPuvvvunHrqqenq6sqhhx7asnX/+Z//OVOnTk1XV1cefvjhjB07dvP3rrnmmkybNi19+vTJDTfckPHjx291nT59+mTMmDFZv359Ro0aldtvvz177bVXBgwYkDVr1rRsXgAAAAAA+IPU6s0xiQ0yPcRjAzeZPn16jj322MyYMaOl644ePTp33XVX/uRP/uRtx5csWZIZM2bksccey/3335+LLrooGzZs2Oo6e+65ZxYuXJjFixenX79+ufnmm1s6JwAAAAAAQA3EqyRr1qzJ3LlzM23atM3xauPGjbnooovS3t6eCRMm5KSTTkpnZ2eSZMGCBTnuuONy5JFHZvz48Vm+fPlW1x41alRGjhz5juP33HNPJk6cmD322CPDhw/PiBEj8vDDD2/XvJ/85Cfzb//2b287NmfOnEyYMGHz11/5ylfyve99L0kyZcqUHHbYYTn88MPzV3/1V9t1DQAAAAAAgJ7gsYFJZs6cmRNPPDGHHHJI9tlnnzzyyCN5+umns3Tp0ixatCgvvvhiRo0alfPOOy/r1q3LpEmTcs8992Tw4MG54447cuWVV+a22257T9d87rnncswxx2z+uq2tLc8999w2P7d+/frcd999OfHEE7frOr/73e9y99135/HHH08pJatWrXpPcwIAAAAAAOxM4lXeeGTg5MmTkyQTJ07M9OnTs27dupx++unZbbfdMmTIkBx//PFJkieeeCKLFy/OCSeckCTZsGFDhg4d+p6v2TTNO46VUrZ6/quvvpqOjo4kb+y8Ov/887frOh/4wAfSv3//fPnLX87nPve5t+3OAgAAAAAAqE2vj1crV67Mgw8+mMWLF6eUkg0bNqSUklNOOWWL5zdNk/b29jz00EPv67ptbW159tlnN3+9bNmy7Lfffls9/813Xm1N3759s3Hjxs1fr127dvPxhx9+OLNmzcqMGTPyzW9+Mw8++OD7mh0AAAAAAKC71Bevpq7eqZfr7OzMWWedle985zubjx133HEZNGhQ7rzzzpx99tlZsWJF5syZkzPPPDMjR47MihUr8tBDD+XjH/941q1blyeffDLt7e3v6bonn3xyzjzzzFx++eV5/vnn89RTT2XcuHE7/HMceOCBWbJkSV577bWsXbs2s2bNyrHHHps1a9bklVdeyUknnZRjjjkmI0aM2OFrAAAAAAAAdLf64tVONn369EyZMuVtx0477bR0dXWlra0to0ePziGHHJKjjz46AwcOTL9+/dLZ2ZlLLrkkq1evzvr16zN58uStxqu77747kyZNyooVK/K5z30uHR0deeCBB9Le3p4zzjgjhx12WPr27Zubbropffr02eGf48Mf/nDOOOOMHH744Tn44INzxBFHJEleeumlfP7zn8/atWvTNE2+8Y1v7PA1AAAAAAAAulvZ0ruXusvYsWOb+fPnv+1YV1dXRo0atdNmeC/WrFmTAQMGZOXKlRk3blzmzp2bIUOG9PRY3a7mfxMAAAAAANiiqQO7Yc2d+7S4XV0pZUHTNGO3dV6v33n1biZMmJBVq1bl9ddfz1VXXdUrwhUAAAAAAEBPEq/exZw5c7b73Isvvjhz585927FLL70055577navsXLlynz6059+x/FZs2Zl33333e51AAAAAAAA/lCJVy1y0003ve819t133yxcuLAF0wAAAAAAAPxh2q2nBwAAAAAAAIA3iVcAAAAAAABUQ7wCAAAAAACgGtW982rM7WNaut6isxe1dD0AAAAAAAC6j51Xm9x9990ppeTxxx/fKdebOXNmlixZ8q7nXHHFFTn00ENz+OGH55RTTsmqVas2f++aa67JiBEjMnLkyDzwwAObj99///0ZOXJkRowYka9+9aubj59zzjkZPnx4Ojo60tHRkYULF7b+hwIAAAAAAHifqtt51VOmT5+eY489NjNmzMjUqVO7/XozZ87MhAkTcthhh231nBNOOCHXXHNN+vbtm7/+67/ONddck2uvvTZLlizJjBkz8thjj+X555/Pn/3Zn+XJJ59Mklx88cX56U9/mra2thx11FE5+eSTN1/ja1/7Wr7whS90+88GAADwDlMHdsOaq1u/Jr2Pe5Oatfr+dG/SKv7fCXQzO6+SrFmzJnPnzs20adMyY8aMJMnGjRtz0UUXpb29PRMmTMhJJ52Uzs7OJMmCBQty3HHH5cgjj8z48eOzfPnyra5966235qijjspHP/rRnHbaaXnllVfyr//6r/nRj36UK664Ih0dHfn3f//3LX72M5/5TPr2faMvHnPMMVm2bFmS5J577snEiROzxx57ZPjw4RkxYkQefvjhPPzwwxkxYkQOOuig9OvXLxMnTsw999zTyl8VAAAAAABAtxKv8sYuqBNPPDGHHHJI9tlnnzzyyCO56667snTp0ixatCjf/e5389BDDyVJ1q1bl0mTJqWzszMLFizIeeedlyuvvHKra5966qmZN29efvOb32TUqFGZNm1a/viP/zgnn3xyvva1r2XhwoX5yEc+ss0Zb7vttnz2s59Nkjz33HP58Ic/vPl7bW1tee6557Z6/E1XXnllDj/88Fx22WV57bXX3vPvCQAAAAAAoLt5bGDeeGTg5MmTkyQTJ07M9OnTs27dupx++unZbbfdMmTIkBx//PFJkieeeCKLFy/OCSeckCTZsGFDhg4dutW1Fy9enL/5m7/JqlWrsmbNmowfP/49z3f11Venb9+++dKXvpQkaZrmHeeUUrJx48YtHk/eeEfWkCFD8vrrr+eCCy7Itddem7/92799z7MAAAAAAAB0p14fr1auXJkHH3wwixcvTiklGzZsSCklp5xyyhbPb5om7e3tm3dibcs555yTmTNn5qMf/Wi+973vZc6cOe9pvttvvz333ntvZs2atTlEtbW15dlnn918zrJly7LffvslyVaPvxnY9thjj5x77rm57rrr3tMcAAAAAAAAO0N18WrR2Yt26vU6Oztz1lln5Tvf+c7mY8cdd1wGDRqUO++8M2effXZWrFiROXPm5Mwzz8zIkSOzYsWKPPTQQ/n4xz+edevW5cknn0x7e/sW13/ppZcydOjQrFu3Lj/4wQ+y//77J0n23nvvvPTSS+862/33359rr702P//5z7PXXnttPn7yySfnzDPPzOWXX57nn38+Tz31VMaNG5emafLUU0/lmWeeyf77758ZM2bkn/7pn5Iky5cvz9ChQ9M0TWbOnJnRo0e/318dAAAAAABAy1UXr3a26dOnZ8qUKW87dtppp6WrqyttbW0ZPXp0DjnkkBx99NEZOHBg+vXrl87OzlxyySVZvXp11q9fn8mTJ281Xv393/99jj766Bx44IEZM2bM5mA1ceLE/MVf/EVuuOGGdHZ2bvG9V1/5ylfy2muvbX5E4THHHJObb7457e3tOeOMM3LYYYelb9++uemmm9KnT58kyTe/+c2MHz8+GzZsyHnnnbd5ri996UtZsWJFmqZJR0dHbr755pb9DgEAAAAAAFqlbOn9Sd1l7Nixzfz58992rKurK6NGjdppM7wXa9asyYABA7Jy5cqMGzcuc+fOzZAhQ3p6rG5X878JAADwB2rqwG5Yc3Xr16T3cW9Ss1bfn+5NWsX/O6mVe7N6pZQFTdOM3dZ5vX7n1buZMGFCVq1alddffz1XXXVVrwhXAAAAAAAAPUm8ehdz5szZ7nMvvvjizJ07923HLr300px77rnd+lkAAAAAAIBdiXjVIjfddFOPfBYAAAAAAGBXsltPDwAAAAAAAABv2ma8KqX0L6U8XEr5TSnlsVLK3206PryU8qtSylOllDtKKf26f1wAAAAAAAB2Zduz8+q1JJ9qmuajSTqSnFhKOSbJtUm+0TTNwUn+X5Lzu29MAAAAAAAAeoNtvvOqaZomyZpNX+6+6U+T5FNJztx0/PYkU5N8+/0O1HXoqPe7xNuMerxrm+f06dMnY8aMyfr16zNq1Kjcfvvt2WuvvVo6x/a4/vrrc8EFF/TItQEAAAAAAGqwXe+8KqX0KaUsTPJikp8m+fckq5qmWb/plGVJ9u+eEbvfnnvumYULF2bx4sXp169fbr755u3+7IYNG1o2x/XXX59XXnmlZesBAAAAAAD8odnmzqskaZpmQ5KOUsp/SXJ3ki1tj2q29NlSygVJLkiSAw44YAfH3Hk++clP5tFHH02SfP/7388NN9yQ119/PUcffXS+9a1vpU+fPhkwYEAuv/zyPPDAA/n617+ePfbYI5deemlefvnl7LHHHpk1a1b22muvTJkyJXPmzMlrr72Wiy++OBdeeGHmzJmTqVOnZtCgQVm8eHGOPPLIfP/738+NN96Y559/Pscff3wGDRqU2bNn5y//8i8zb968vPrqq/nCF76Qv/u7v0uS/OQnP8nll1+eQYMG5WMf+1iefvrp3HvvvXn55ZczadKkLFq0KOvXr8/UqVPz+c9/vid/nQCwa5o6sBvWXN36Nel93JsAAADsArZr59WbmqZZlWROkmOS/JdSypvxqy3J81v5zC1N04xtmmbs4MGD38+s3W79+vW57777MmbMmHR1deWOO+7I3Llzs3DhwvTp0yc/+MEPkiQvv/xyRo8enV/96lcZN25c/vzP/zz/+I//mN/85jf52c9+lj333DPTpk3LwIEDM2/evMybNy+33nprnnnmmSTJr3/961x//fVZsmRJnn766cydOzeXXHJJ9ttvv8yePTuzZ89Oklx99dWZP39+Hn300fz85z/Po48+mrVr1+bCCy/Mfffdl1/+8pdZsWLF5vmvvvrqfOpTn8q8efMye/bsXHHFFXn55Zd3/i8SAAAAAABgB21z51UpZXCSdU3TrCql7Jnkz5Jcm2R2ki8kmZHk7CT3dOeg3enVV19NR0dHkjd2Xp1//vm55ZZbsmDBghx11FGbz/nQhz6U5I13ZJ122mlJkieeeCJDhw7dfN4HPvCBJMm//Mu/5NFHH01nZ2eSZPXq1XnqqafSr1+/jBs3Lm1tbUmSjo6OLF26NMcee+w75vrhD3+YW265JevXr8/y5cuzZMmSbNy4MQcddFCGDx+eJPniF7+YW265ZfM1f/SjH+W6665Lkqxduzb/8R//kVGjWvseMQAAAAAAgO6yPY8NHJrk9lJKn7yxU+uHTdPcW0pZkmRGKeUfkvw6ybRunLNbvfnOq7dqmiZnn312rrnmmnec379///Tp02fzeaWUd5zTNE1uvPHGjB8//m3H58yZkz322GPz13369Mn69ev/88fzzDPP5Lrrrsu8efPywQ9+MOecc07Wrl2bptni0xk3X/POO+/MyJEj3/0HBgAAAAAAqNQ2HxvYNM2jTdMc0TTN4U3TjG6a5n9vOv500zTjmqYZ0TTN6U3TvNb94+48n/70p9PZ2ZkXX3wxSfK73/0uv/3tb99x3qGHHprnn38+8+bNS5K89NJLWb9+fcaPH59vf/vbWbduXZLkySef3OYj/Pbee++89NJLSZLf//73+aM/+qMMHDgwL7zwQu67777N13v66aezdOnSJMkd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\n",
      "text/plain": [
       "<Figure size 2160x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "youngest_10.plot.bar(figsize = (30, 10))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x75e59efb00>"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# to plot the pie chat of the Percentage column above\n",
    "\n",
    "youngest_10[\"Percentage\"].plot.pie(autopct='%.2f', fontsize=15, figsize=(6, 6), title=\"Pie Chart for 10 Youngest Members Celebrating\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x75e5a52fd0>"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# box plot on df for the three columns, if there are outliers you will see them\n",
    "\"\"\"In statistics, an outlier is an observation point that is distant from other observations.\n",
    "An outlier may be due to variability in the measurement or it may indicate experimental error; \n",
    "the latter are sometimes excluded from the data set.\"\"\"\n",
    "\n",
    "df.plot.box()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x75e5b12240>"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Area plot, just to compare the three colums\n",
    "df.plot.area()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x75e73636a0>"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "youngest_10.plot.scatter(x = 'Age_10_Plus', y = 'Age_at_2005', figsize = (15, 10))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
